<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="rss.xsl"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title>Vibhavari Bellutagi Blog</title>
        <link>https://buildwithvibs.in/blog</link>
        <description>Vibhavari Bellutagi Blog</description>
        <lastBuildDate>Fri, 21 Mar 2025 00:00:00 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>https://github.com/jpmonette/feed</generator>
        <language>en</language>
        <item>
            <title><![CDATA[Automating Unit Tests and Deploying AWS Glue & Lambda Python Jobs with CI/CD]]></title>
            <link>https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd</link>
            <guid>https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd</guid>
            <pubDate>Fri, 21 Mar 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[In this blog, we’ll explore how to set up a complete CI/CD pipeline using Jenkins, pytest, and Terraform to automate unit testing and deployment for AWS Glue and Lambda jobs. You’ll also learn how to manage Python dependencies using uv and pyproject.toml, use JFrog Artifactory to store and retrieve build artifacts, and enforce code quality with Ruff.]]></description>
            <content:encoded><![CDATA[<p>In this blog, we’ll explore how to set up a complete CI/CD pipeline using <code>Jenkins</code>, <code>pytest</code>, and <code>Terraform</code> to automate unit testing and deployment for AWS Glue and Lambda jobs. You’ll also learn how to manage Python dependencies using <code>uv</code> and <code>pyproject.toml</code>, use <code>JFrog Artifactory</code> to store and retrieve build artifacts, and enforce code quality with <code>Ruff</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>Automating the execution of unit tests within a DevOps pipeline is indispensable for ensuring the integrity, resilience, and maintainability of distributed data systems. As a data engineer, I’ve worked on setting up Jenkins pipelines that streamline the development lifecycle. These pipelines have brought noticeable improvements in code quality, deployment consistency, and developer confidence.</p>
<p>This comprehensive guide presents a production-ready approach to:</p>
<ul>
<li>Automating unit testing for AWS Glue and Lambda Python applications using <code>pytest</code></li>
<li>Enforcing code quality with <code>ruff</code> (replacing flake8, black, and isort)</li>
<li>Managing dependencies efficiently with <code>uv</code> and <code>pyproject.toml</code></li>
<li>Packaging and publishing artifacts via <code>JFrog Artifactory</code></li>
<li>Deploying verified code to Amazon S3 via <code>Terraform</code></li>
<li>Executing downstream Glue or Lambda jobs using the uploaded package</li>
</ul>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cicd-lifecycle-overview">CI/CD Lifecycle Overview<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#cicd-lifecycle-overview" class="hash-link" aria-label="Direct link to CI/CD Lifecycle Overview" title="Direct link to CI/CD Lifecycle Overview">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="continuous-integration-ci">Continuous Integration (CI)<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#continuous-integration-ci" class="hash-link" aria-label="Direct link to Continuous Integration (CI)" title="Direct link to Continuous Integration (CI)">​</a></h3>
<p>Triggered on each commit or pull request, the CI pipeline performs the following operations:</p>
<ol>
<li><strong>Initialize Environment</strong>: Initialize Environment: Use <code>uv</code> to set up and sync dependencies from pyproject.toml.</li>
<li><strong>Install Dependencies</strong>: Install project requirements from <code>pyproject.toml</code>.</li>
<li><strong>Code Quality Check</strong>:<!-- -->
<ol>
<li><strong>Formatting</strong>: Use <code>uv run ruff format --check</code> to auto-format your code consistently.</li>
<li><strong>Linting</strong>: Use <code>uv run ruff check .</code> to detect syntax issues, unused imports, and common code errors.</li>
<li><strong>Import Sorting</strong>: Use <code>uv run ruff check --select I</code> to enforce import order rules.</li>
</ol>
</li>
<li><strong>Unit Testing</strong>: Execute <code>uv run pytest</code> and produce JUnit reports.</li>
<li><strong>Artifact Packaging</strong>: Zip the tested code and upload it to JFrog Artifactory.</li>
</ol>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>Using <code>Formatter</code> first and then <code>linter</code> will save you time and effort in fixing the linting issues, you will thank me later ;)</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="continuous-deployment-cd">Continuous Deployment (CD)<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#continuous-deployment-cd" class="hash-link" aria-label="Direct link to Continuous Deployment (CD)" title="Direct link to Continuous Deployment (CD)">​</a></h3>
<p>Upon CI success, CD automates infrastructure provisioning and code deployment:</p>
<ol>
<li><strong>Artifact Download</strong>: Retrieve the latest build from Artifactory.</li>
<li><strong>Terraform Plan</strong>: Generate a preview of infrastructure changes.</li>
<li><strong>Terraform Apply</strong>: Apply changes to provision or update cloud resources.</li>
<li><strong>Trigger Execution</strong>: Enable Glue or Lambda jobs to consume the new code from <code>S3</code>.</li>
</ol>
<p><img decoding="async" loading="lazy" alt="CI/CD Pipeline" src="https://buildwithvibs.in/assets/images/ci_cd-04907051604d8955fc5c3e08d375dc26.png" width="7983" height="4861" class="img_ev3q"></p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-modularizing-code-for-testability">Step 1: Modularizing Code for Testability<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#step-1-modularizing-code-for-testability" class="hash-link" aria-label="Direct link to Step 1: Modularizing Code for Testability" title="Direct link to Step 1: Modularizing Code for Testability">​</a></h2>
<p><strong>Python Code Structure</strong></p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">data-pipeline/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── pyproject.toml</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── Jenkinsfile</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── src/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── __init__.py</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── handler.py         # Lambda handler logic</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── transform.py       # Glue transformations or shared business logic</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── tests/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── __init__.py</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   ├── test_handler.py</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   └── test_transform.py</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">├── scripts/</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">│   └── deploy.sh          # Optional scripts for local testing or deployment</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">└── README.md</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Glue Example</strong></p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token comment" style="color:rgb(98, 114, 164)"># transform.py</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">clean_name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">return</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> item</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">strip</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">lower</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">for</span><span class="token plain"> item </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-writing-and-executing-unit-tests">Step 2: Writing and Executing Unit Tests<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#step-2-writing-and-executing-unit-tests" class="hash-link" aria-label="Direct link to Step 2: Writing and Executing Unit Tests" title="Direct link to Step 2: Writing and Executing Unit Tests">​</a></h2>
<p><strong>Basic Unit Test with Pytest</strong></p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> transform </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> clean_name</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">test_clean_name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    input_data </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">" John "</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    expected_output </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"john"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">assert</span><span class="token plain"> clean_name</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">input_data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> expected_output</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Run locally:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">uv run pytest tests/</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Mocking AWS Services with Moto</strong></p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> moto </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> mock_s3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> boto3</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">def</span><span class="token plain"> </span><span class="token function" style="color:rgb(80, 250, 123)">test_s3_upload</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">with</span><span class="token plain"> mock_s3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        s3 </span><span class="token operator">=</span><span class="token plain"> boto3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">client</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'s3'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> region_name</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'us-east-1'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        s3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">create_bucket</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Bucket</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'test-bucket'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        s3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">put_object</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Bucket</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'test-bucket'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Key</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'file.txt'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Body</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'test'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        response </span><span class="token operator">=</span><span class="token plain"> s3</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">get_object</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">Bucket</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'test-bucket'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Key</span><span class="token operator">=</span><span class="token string" style="color:rgb(255, 121, 198)">'file.txt'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">assert</span><span class="token plain"> response</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">'Body'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">read</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">decode</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">==</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'test'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Sample Pyproject.toml for Dependency Management</strong></p>
<div class="language-toml codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-toml codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[project]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">name = "data-pipeline"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">version = "0.1.0"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">dependencies = [</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    "boto3",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    "pytest",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    "moto",</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    "ruff"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">[tool.ruff]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">line-length = 88</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">select = ["E", "F", "I", "UP"]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">exclude = [".venv", "build"]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-sample-jenkins-ci-pipeline-configuration">Step 3: Sample Jenkins CI Pipeline Configuration<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#step-3-sample-jenkins-ci-pipeline-configuration" class="hash-link" aria-label="Direct link to Step 3: Sample Jenkins CI Pipeline Configuration" title="Direct link to Step 3: Sample Jenkins CI Pipeline Configuration">​</a></h2>
<p><strong>CI Jenkinsfile using uv</strong></p>
<div class="language-groovy codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-groovy codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">pipeline {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    agent any</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    stages {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        stage('Setup Env') {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            steps { sh 'curl -Ls https://astral.sh/uv/install.sh | sh' }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        stage('Install Deps') {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            steps { sh 'uv sync' }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        stage('Format') {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            steps { sh 'uv run ruff format --check' }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        stage('Lint') {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            steps { sh 'uv run ruff check .' }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        stage('Unit Tests') {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            steps { sh 'uv run pytest' }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        stage('Publish Artifact') {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            steps {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                sh 'zip -r my_code.zip .'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">                sh 'curl -u $JFROG_USER:$JFROG_PASSWORD -T my_code.zip https://your-jfrog-url/artifactory/repo-name/'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">            }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-4-samplejenkins-cd-pipeline--terraform">Step 4: SampleJenkins CD Pipeline + Terraform<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#step-4-samplejenkins-cd-pipeline--terraform" class="hash-link" aria-label="Direct link to Step 4: SampleJenkins CD Pipeline + Terraform" title="Direct link to Step 4: SampleJenkins CD Pipeline + Terraform">​</a></h2>
<p><strong>CD Jenkinsfile</strong></p>
<div class="language-groovy codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-groovy codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">pipeline {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    agent any</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    environment {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        TF_VAR_code_url = 'https://your-jfrog-url/artifactory/repo-name/my_code.zip'</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    stages {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        stage('Terraform Init') { steps { sh 'terraform init' } }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        stage('Terraform Plan') { steps { sh 'terraform plan' } }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">        stage('Terraform Apply') { steps { sh 'terraform apply -auto-approve' } }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><strong>Sample Terraform Code</strong></p>
<div class="language-hcl codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-hcl codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "null_resource" "download_code" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  provisioner "local-exec" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    command = "curl -o /tmp/my_code.zip ${var.code_url}"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  }</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">resource "aws_s3_object" "upload_code" {</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  bucket = "my-etl-code-bucket"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  key    = "glue_or_lambda/my_code.zip"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  source = "/tmp/my_code.zip"</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">}</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="toolchain-summary">Toolchain Summary<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#toolchain-summary" class="hash-link" aria-label="Direct link to Toolchain Summary" title="Direct link to Toolchain Summary">​</a></h2>
<ol>
<li><a href="https://www.jenkins.io/" target="_blank" rel="noopener noreferrer">Jenkins</a> – Core CI/CD orchestrator</li>
<li><a href="https://docs.pytest.org/en/stable/" target="_blank" rel="noopener noreferrer">pytest</a> – Testing framework for validating business logic</li>
<li><a href="https://docs.getmoto.org/en/latest/docs/getting_started.html" target="_blank" rel="noopener noreferrer">moto</a> – AWS mocking tool for offline unit testing</li>
<li><a href="https://docs.astral.sh/ruff/" target="_blank" rel="noopener noreferrer">ruff</a> – All-in-one Python linter, formatter, and import sorter</li>
<li><a href="https://docs.astral.sh/uv/" target="_blank" rel="noopener noreferrer">uv</a> – Lightning-fast dependency manager for Python projects</li>
<li><a href="https://www.terraform.io/" target="_blank" rel="noopener noreferrer">Terraform</a> – Infrastructure as Code for AWS resource automation</li>
<li><a href="https://jfrog.com/" target="_blank" rel="noopener noreferrer">JFrog Artifactory</a> – Artifact repository for storing build assets</li>
</ol>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="final-thoughts">Final Thoughts<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#final-thoughts" class="hash-link" aria-label="Direct link to Final Thoughts" title="Direct link to Final Thoughts">​</a></h2>
<p>Having a CI/CD pipeline in place is no longer optional — it’s foundational to any reliable data engineering workflow. Whether you're building Lambda functions, Glue jobs, or full-fledged data platforms, automating testing, validation, and deployment allows teams to move faster while maintaining confidence in every release.</p>
<hr>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next Steps<a href="https://buildwithvibs.in/blog/automate-unit-tests-using-ci-cd#next-steps" class="hash-link" aria-label="Direct link to Next Steps" title="Direct link to Next Steps">​</a></h2>
<p>Hope this guide helps you implement a robust CI/CD pipeline for your projects. Let me know if you need running code examples or have any questions. Feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>ci-cd</category>
            <category>data-engineering</category>
            <category>devops</category>
        </item>
        <item>
            <title><![CDATA[The Life Cycle of a Spark Application ( Outside )]]></title>
            <link>https://buildwithvibs.in/blog/spark-application-lifecycle-outside</link>
            <guid>https://buildwithvibs.in/blog/spark-application-lifecycle-outside</guid>
            <pubDate>Fri, 07 Feb 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[In this blog, we will go in-depth on the overall life cycle of Spark Applications from outside the actual Spark code. Before going ahead, I recommend reading the Execution Modes of the Spark application.]]></description>
            <content:encoded><![CDATA[<p>In this blog, we will go in-depth on the overall life cycle of Spark Applications from outside the actual Spark code. Before going ahead, I recommend reading the <a href="https://buildwithvibs.in/blog/spark-execution-modes">Execution Modes</a> of the Spark application.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="client-request">Client Request<a href="https://buildwithvibs.in/blog/spark-application-lifecycle-outside#client-request" class="hash-link" aria-label="Direct link to Client Request" title="Direct link to Client Request">​</a></h2>
<ul>
<li>The first step is the client request. This is the request that is made by the user to the Spark Application.</li>
<li>This request can be made in a variety of ways: Compiled Jars or a library. The most common way is through the <code>Spark Submit</code> command Using compiled Jars.</li>
<li>At this point, the client is executing code on the local machine and is going to make a request to the cluster manager driver node.</li>
</ul>
<div class="text--center"><img src="https://buildwithvibs.in/assets/images/requesting_resources-08d31b188d513bb914c06cb1769d5072.gif" width="500" height="400"></div>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">./bin/spark-submit \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --class &lt;main-class&gt; \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --master &lt;master-url&gt; \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --deploy-mode cluster \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  --conf &lt;key&gt;=&lt;value&gt; \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  ... # other options</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  &lt;application-jar&gt; \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">  [application-arguments]</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The Spark Submit command takes number of arguments, for example:</p>
<ul>
<li>the main class of the Application</li>
<li>the master URL ( local, yarn, Mesos etc )</li>
<li>the deploy mode (local, cluster, client)</li>
<li>the configuration of the application</li>
<li>Other arguments like the number of executors to use, the amount of memory to allocate to each executor, the location of the input data.</li>
<li>the location of the application jar file.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="launch">Launch<a href="https://buildwithvibs.in/blog/spark-application-lifecycle-outside#launch" class="hash-link" aria-label="Direct link to Launch" title="Direct link to Launch">​</a></h2>
<ul>
<li>After the spark-submit command is executed, the driver process has been placed on the cluster, begins running user code</li>
<li>The user code should contain <code>SparkSession</code>, which is responsible for initializing the Spark Cluster(eg: driver and executors).</li>
<li>Subsequently, the <code>SparkSession</code> will communicate with cluster manager for launching the spark executors processors across the cluster.</li>
<li>The relevant configurations like number of executors, memory, cores etc are passed to the cluster manager by user via <code>spark-submit</code> command.</li>
</ul>
<div class="text--center"><img src="https://buildwithvibs.in/assets/images/launch-3d8102d2afd13de56278cd0188e93baf.gif" width="500" height="400"></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="execution">Execution<a href="https://buildwithvibs.in/blog/spark-application-lifecycle-outside#execution" class="hash-link" aria-label="Direct link to Execution" title="Direct link to Execution">​</a></h2>
<ul>
<li>Spark Context is created now, spark goes about executing the code.</li>
<li>The driver process and executors communicate with each other, executing code and moving data between each other.</li>
<li>The driver schedules tasks onto each worker, and each worker responds with the status of those tasks and success or failure.</li>
</ul>
<div class="text--center"><img src="https://buildwithvibs.in/assets/images/execution-a188bc81cd6b08360af122955fa48d69.gif" width="550" height="400"></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="completion">Completion<a href="https://buildwithvibs.in/blog/spark-application-lifecycle-outside#completion" class="hash-link" aria-label="Direct link to Completion" title="Direct link to Completion">​</a></h2>
<ul>
<li>Upon completion, the driver process exits with either success or failure.</li>
<li>The cluster manager shuts down the executors in the Spark cluster for the driver.</li>
<li>The success or failure of the Spark Application can be checked by querying the cluster manager.</li>
</ul>
<div class="text--center"><img src="https://buildwithvibs.in/assets/images/completion-77a6039131b5b22a2ccb5e06457f9f32.gif" width="550" height="400"></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://buildwithvibs.in/blog/spark-application-lifecycle-outside#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>In this blog, we have explored the overall life cycle of a Spark Application from outside the actual Spark code. We have detailed how the client request is made, how the Spark Application is launched, how the code is executed, and how the Spark Application reaches its completion. If you are interested in more such content, do check out <a href="https://buildwithvibs.in/blog/tags/apache-spark">Apache Spark</a> series.</p>
<p>If you have any questions or feedback, feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>data-engineering</category>
            <category>apache-spark</category>
        </item>
        <item>
            <title><![CDATA[Spark Execution Modes]]></title>
            <link>https://buildwithvibs.in/blog/spark-execution-modes</link>
            <guid>https://buildwithvibs.in/blog/spark-execution-modes</guid>
            <pubDate>Thu, 06 Feb 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[In this post, we will discuss the different execution modes available in Apache Spark. Apache Spark provides three execution modes to run Spark applications. These execution modes are: Cluster mode, Client mode, and Local mode. Each of these modes has its own use case and is suitable for different scenarios.]]></description>
            <content:encoded><![CDATA[<p>In this post, we will discuss the different execution modes available in Apache Spark. Apache Spark provides three execution modes to run Spark applications. These execution modes are: Cluster mode, Client mode, and Local mode. Each of these modes has its own use case and is suitable for different scenarios.</p>
<p>To have an understand of the execution mode, we will need to re-visit the high-level components of a Spark application, those are:</p>
<ol>
<li><strong>The Spark Driver</strong>:<!-- -->
<ul>
<li>Driver is the <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">controller of the execution</span> of the spark application, it maintains the state of the spark cluster (the state and tasks of the executors).</li>
<li>It will interact with the cluster manager to allocate resources for the executors and schedule tasks on the executors.</li>
<li>The driver is just a process on the physical machine, which is responsible for maintaining the state of the application running on the cluster.</li>
</ul>
</li>
<li><strong>The Spark Executors</strong>:<!-- -->
<ul>
<li>Executors are <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">the processes that run the actual tasks</span> of the spark application, assigned by the driver.</li>
<li>The main responsibility of the executor is to<!-- -->
<ul>
<li>take the tasks from the driver</li>
<li>run the tasks</li>
<li>report back the status of the tasks to the driver and results.</li>
</ul>
</li>
</ul>
</li>
<li><strong>Cluster Manager</strong>:<!-- -->
<ul>
<li>The cluster manager is responsible for <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">maintaining a cluster of machines</span> that will run your Spark Application(s).</li>
<li>Somewhat confusingly, a cluster manager has its own "driver" (sometimes referred to as master) and "worker" abstractions.</li>
<li>The key difference is that these abstractions are tied to physical machines rather than processes, as they are in Spark.</li>
</ul>
</li>
</ol>
<div class="text--center"><img src="https://buildwithvibs.in/assets/images/cluster_manager-ee69ff7b4553bc54b04ae088f7250cf9.png" width="550" height="450"></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="analogy">Analogy<a href="https://buildwithvibs.in/blog/spark-execution-modes#analogy" class="hash-link" aria-label="Direct link to Analogy" title="Direct link to Analogy">​</a></h3>
<p>Running a Spark application is like managing a busy restaurant where each component plays a distinct role to ensure everything runs smoothly and efficiently:</p>
<ol>
<li><strong>Spark Driver (Head Chef)</strong>: The head chef manages the kitchen, assigns tasks to the cooks (executors), and makes sure every dish is prepared correctly.</li>
<li><strong>Spark Executors (Cooks)</strong>: The cooks prepare the dishes following the head chef’s instructions and report back when each dish is ready.</li>
<li><strong>Cluster Manager (Restaurant Manager)</strong>: The restaurant manager ensures the kitchen has enough staff, ingredients, and equipment to run smoothly, handling multiple orders at once.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="execution-modes">Execution Modes<a href="https://buildwithvibs.in/blog/spark-execution-modes#execution-modes" class="hash-link" aria-label="Direct link to Execution Modes" title="Direct link to Execution Modes">​</a></h2>
<p>An execution mode gives you the power to determine where the aforementioned resources are physically located when you go to run your application.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="cluster-mode">Cluster Mode<a href="https://buildwithvibs.in/blog/spark-execution-modes#cluster-mode" class="hash-link" aria-label="Direct link to Cluster Mode" title="Direct link to Cluster Mode">​</a></h3>
<ol>
<li>The user submits a JAR, Python script to the cluster manager.</li>
<li>The cluster manager launches both the driver and executors on worker nodes within the cluster.</li>
<li>The driver process runs on one worker node, while executors run on other worker nodes.</li>
<li>The cluster manager manages and monitors all Spark application processes.</li>
</ol>
<div class="text--center"><img src="https://buildwithvibs.in/assets/images/cluster_mode-e0aa25aea4b420a85c48b967f0b1e514.gif" width="600" height="400"></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="client-mode">Client Mode<a href="https://buildwithvibs.in/blog/spark-execution-modes#client-mode" class="hash-link" aria-label="Direct link to Client Mode" title="Direct link to Client Mode">​</a></h3>
<ol>
<li>Client Mode is similar to Cluster Mode, but the Spark Driver runs on the client machine (the machine that submits the application).</li>
<li>The client machine is responsible for managing the driver process.</li>
<li>The cluster manager handles the executor processes, which run on worker nodes in the cluster.</li>
<li>In Client Mode, the application is submitted from a machine <strong>outside the cluster</strong>, often called a <strong>gateway machine</strong> or <strong>edge node</strong>.</li>
<li>The driver stays on the client machine, while executors run inside the cluster on worker nodes.</li>
</ol>
<div class="text--center"><img src="https://buildwithvibs.in/assets/images/client_mode-425a36cd961a4be2fddf5ef5536c5f84.gif" width="600" height="400"></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="local-mode">Local Mode<a href="https://buildwithvibs.in/blog/spark-execution-modes#local-mode" class="hash-link" aria-label="Direct link to Local Mode" title="Direct link to Local Mode">​</a></h3>
<ol>
<li>Local Mode runs the entire Spark application on a single machine.</li>
<li>It achieves parallelism using threads on the same machine, not multiple worker nodes.</li>
<li>Used for learning Spark, testing applications, and iterative development.</li>
<li>No cluster manager is required; Spark manages everything locally.</li>
<li>Ideal for small datasets and quick experiments but not suitable for production or large-scale jobs.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://buildwithvibs.in/blog/spark-execution-modes#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<table><thead><tr><th></th><th><strong>Client Mode</strong></th><th><strong>Cluster Mode</strong></th></tr></thead><tbody><tr><td><strong>Best for</strong></td><td>Interactive use (development, debugging)</td><td>Production jobs, large-scale deployments</td></tr><tr><td><strong>Latency</strong></td><td>Lower latency for small tasks</td><td>Slightly higher due to internal resource allocation</td></tr><tr><td><strong>Example Use Case</strong></td><td>Testing and interactive Spark shells</td><td>Scheduled batch jobs or long-running Spark applications</td></tr><tr><td><strong>Advantages</strong></td><td>Easier to debug and monitor from client machine</td><td>More reliable and scalable for production workloads</td></tr><tr><td><strong>Disadvantages</strong></td><td>Unreliable for long-running tasks</td><td>More setup needed, harder to debug directly</td></tr></tbody></table>
<p>I hope this blog helped you understand the different execution modes. To learn more about the Spark application architecture, you will find it <a href="https://buildwithvibs.in/blog/spark-application-lifecycle-outside">here</a>. If you are interested in reading more about Spark, check out the other posts in this <a href="https://buildwithvibs.in/blog/tags/apache-spark">series</a>.
If you have any questions or feedback, feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>data-engineering</category>
            <category>apache-spark</category>
        </item>
        <item>
            <title><![CDATA[Under the hood of a Spark job]]></title>
            <link>https://buildwithvibs.in/blog/spark-job-anatomy</link>
            <guid>https://buildwithvibs.in/blog/spark-job-anatomy</guid>
            <pubDate>Tue, 21 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Understanding the internal execution flow of a Spark application is key to optimizing performance and debugging. This blog dives into the details of Spark jobs, stages, and tasks, providing a thorough exploration of how Spark handles distributed execution.]]></description>
            <content:encoded><![CDATA[<p>Understanding the internal execution flow of a Spark application is key to optimizing performance and debugging. This blog dives into the details of <code>Spark jobs</code>, <code>stages</code>, and <code>tasks</code>, providing a thorough exploration of how Spark handles distributed execution.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="spark-job-anatomy">Spark Job Anatomy<a href="https://buildwithvibs.in/blog/spark-job-anatomy#spark-job-anatomy" class="hash-link" aria-label="Direct link to Spark Job Anatomy" title="Direct link to Spark Job Anatomy">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="jobs">Jobs<a href="https://buildwithvibs.in/blog/spark-job-anatomy#jobs" class="hash-link" aria-label="Direct link to Jobs" title="Direct link to Jobs">​</a></h3>
<p>Each application is made up of one or more Spark jobs. Spark jobs within an application are executed serially. In general, a job is created for <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">each action operation</span> in the spark application.</p>
<p>Each job breaks down into a series of stages, the number of which depends on how many shuffle operations need to take place.</p>
<p>Since Spark <a href="https://en.wikipedia.org/wiki/Lazy_evaluation" target="_blank" rel="noopener noreferrer">evaluates lazily</a>, the job is not executed until an action is called. If there are no actions, there are no jobs.</p>
<p><img decoding="async" loading="lazy" alt="no-action-no-job" src="https://buildwithvibs.in/assets/images/no-actions-no-jobs-6ababeface2ed5a49dcf40d7caad9ce1.png" width="2478" height="1079" class="img_ev3q"></p>
<p>When an action is called on a RDD/DF, a job is created.</p>
<p><img decoding="async" loading="lazy" alt="action-job" src="https://buildwithvibs.in/assets/images/job-created-33f76c76849b8de47e429df7ea17e2c7.png" width="1991" height="1167" class="img_ev3q"></p>
<p>Key Features of Spark Jobs:</p>
<ul>
<li>Each job is composed of multiple stages.</li>
<li>Spark generates one job per action.</li>
<li>Jobs are independent and can run in parallel if no dependencies exist between them.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="stages">Stages<a href="https://buildwithvibs.in/blog/spark-job-anatomy#stages" class="hash-link" aria-label="Direct link to Stages" title="Direct link to Stages">​</a></h3>
<p>A stage is a group of tasks that Spark can run together to perform the same operation across multiple machines. While Spark tries to include as much work as possible in one stage, it creates a new stage whenever there’s a shuffle operation.</p>
<p>A shuffle happens when <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">Spark redistributes data across partitions or nodes in the cluster</span> to complete certain operations. It involves a physical rearrangement of the data to meet the needs of the computation.</p>
<p><u>For example</u>:
Sorting a DataFrame, or grouping data that was loaded from a file by key (which requires sending records with the same key to the same node).</p>
<p>This type of repartitioning requires coordinating across executors to move data around. Spark starts a new stage after each shuffle, and keeps track of what order the stages must run in to compute the final result</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">scala&gt; val df1 = spark.range(2, 10000000, 2) </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">val df1: org.apache.spark.sql.Dataset[Long] = [id: bigint]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">scala&gt; val step1 = df1.repartition(5)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">val step1: org.apache.spark.sql.Dataset[Long] = [id: bigint]</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">scala&gt; step1.count()</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">val res0: Long = 4999999</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="stages" src="https://buildwithvibs.in/assets/images/shuffles-64409d650e05e0c018b1f11be1d57d25.png" width="2424" height="1290" class="img_ev3q"></p>
<p>In the above example:</p>
<ul>
<li>The the 1st stage (stage-0) correspond to the <code>range</code> that you perform in order to create your DataFrames. By default when you create a DataFrame with range, it has <code>8 partitions</code>.</li>
<li>The next stage (stage-1) is the <code>repartitioning</code>. This changes the number of partitions by shuffling the data. These DataFrames are shuffled into <code>5 partitions</code>.</li>
<li>The final stage (stage-2) is the <code>count action</code>. This is the final stage that is executed.</li>
</ul>
<div class="language-scala codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-scala codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">val df1 = spark.range(2, 10000000, 2)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">val df2 = spark.range(2, 10000000, 4)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">val step1 = df1.repartition(5)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">val step12 = df2.repartition(6)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">val step2 = step1.selectExpr("id * 5 as id")</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">val step3 = step2.join(step12, ["id"])</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">val step4 = step3.selectExpr("sum(id)")</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="shuffle-partitions" src="https://buildwithvibs.in/assets/images/shuffle-partitions-add204781b6b56f48efaf2b999438528.png" width="2834" height="482" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="shuffle-partition-viz" src="https://buildwithvibs.in/assets/images/shuffle-partition-viz-a58955ec87f6a7668ebdc11e8ab6eccb.png" width="2425" height="1567" class="img_ev3q"></p>
<ul>
<li>Stages 3 and 4 perform on each of those DataFrames and the end of the stage represents the join (a shuffle).</li>
<li>Suddenly, why we have 200 tasks? This is because of a Spark SQL configuration. The <code>spark.sql.shuffle.partitions</code> default value is 200, which means that when there is a shuffle performed during execution, it outputs 200 shuffle partitions by default. However you can change this value, and the number of output partitions will change.</li>
</ul>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>A good rule of thumb: The number of partitions should be larger than the number of executors on your cluster, potentially by multiple factors depending on the workload.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tasks">Tasks<a href="https://buildwithvibs.in/blog/spark-job-anatomy#tasks" class="hash-link" aria-label="Direct link to Tasks" title="Direct link to Tasks">​</a></h3>
<p>A task is just a <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">unit of computation applied to a unit of data (the partition)</span>. Stages in Spark consists of tasks. Each task corresponds to a combination of blocks of data and a set of transformations that will run on a single executor.</p>
<p>Partitioning your data into a greatest number of partitions means that more can be executed in parallel.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="summary">Summary<a href="https://buildwithvibs.in/blog/spark-job-anatomy#summary" class="hash-link" aria-label="Direct link to Summary" title="Direct link to Summary">​</a></h2>
<p>Easy way to remember how Spark organizes work:</p>
<table><thead><tr><th><strong>Topic</strong></th><th><strong>Key Points</strong></th></tr></thead><tbody><tr><td><strong>App Decomposition</strong></td><td>- 1 Spark Application can have 1 or more Jobs. <br> - Each Job is broken into 1 or more Stages.</td></tr><tr><td><strong>Stages &amp; Tasks</strong></td><td>- Each Stage is subdivided into Tasks. <br> - Shuffle boundaries (data rearrangements) define when Spark moves from one Stage to the next.</td></tr><tr><td><strong>Tasks &amp; Executors</strong></td><td>- One Task runs on one Executor (it can’t move mid-task). <br> - An Executor can run multiple Tasks (depending on its available cores).</td></tr><tr><td><strong>Partitions &amp; Tasks</strong></td><td>- Processing one partition = one Task. <br> - The number of Tasks in a Stage often equals the number of partitions for that data.</td></tr><tr><td><strong>Partitions &amp; Executors</strong></td><td>- A partition stays on one Executor while it’s being processed. <br> - Each Executor can hold 0 or more partitions in memory or on disk.</td></tr><tr><td><strong>Executors &amp; Nodes</strong></td><td>- 1 Executor corresponds to 1 JVM running on 1 physical/virtual Node. <br> - Each Node can host 0 or more Executors.</td></tr></tbody></table>
<p>Use this table as a handy to keep the Spark “big picture” in mind:</p>
<ol>
<li>Spark <strong>Applications</strong> → <strong>Jobs</strong> → <strong>Stages</strong> → <strong>Tasks</strong>.</li>
<li>A <strong>Task</strong> processes a <strong>Partition</strong>.</li>
<li><strong>Executors</strong> (JVMs) on cluster <strong>Nodes</strong> do the actual work.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a href="https://buildwithvibs.in/blog/spark-job-anatomy#references" class="hash-link" aria-label="Direct link to References" title="Direct link to References">​</a></h2>
<ol>
<li><a href="https://www.amazon.com/Spark-Definitive-Guide-Processing-Simple/dp/1491912219" target="_blank" rel="noopener noreferrer">Spark: The Definitive Guide</a></li>
<li><a href="https://spark.apache.org/docs/latest/index.html" target="_blank" rel="noopener noreferrer">Apache Spark Documentation</a></li>
</ol>
<p>I hope you enjoyed reading this blog, if you are interested in learning other topics related to Apache Spark, feel free to check <a href="https://buildwithvibs.in/blog/tags/apache-spark">Apache Spark</a> series.</p>
<p>If you have any questions or feedback, feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>data-engineering</category>
            <category>apache-spark</category>
        </item>
        <item>
            <title><![CDATA[Handling Nulls in Spark]]></title>
            <link>https://buildwithvibs.in/blog/handling-nulls-in-spark</link>
            <guid>https://buildwithvibs.in/blog/handling-nulls-in-spark</guid>
            <pubDate>Mon, 13 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[In SQL null or Null is a special marker used to indicate that a data value does not exist in the database. A null should not be confused with a value of 0. A null indicates a lack of a value, which is not the same as a zero value.]]></description>
            <content:encoded><![CDATA[<p>In SQL <code>null</code> or <code>Null</code> is a special marker used to indicate that a data value does not exist in the database. A null should not be confused with a value of 0. A null indicates a lack of a value, which is not the same as a zero value.</p>
<p>For example:
Consider the question "How many books does Krishna own?"
The answer may be <code>zero</code> (we know that he owns none) or <code>null</code> (we do not know how many he owns).</p>
<p>Let's deep dive into handling nulls in Spark.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="handling-nulls-in-spark">Handling nulls in Spark<a href="https://buildwithvibs.in/blog/handling-nulls-in-spark#handling-nulls-in-spark" class="hash-link" aria-label="Direct link to Handling nulls in Spark" title="Direct link to Handling nulls in Spark">​</a></h2>
<p>In Spark, a null value represents the absence of any value: it is not zero, an empty string, or false. Spark treats nulls in a way similar to SQL. When performing operations on null values, you need to be explicit about how to handle them, as any operation with a null value generally yields a null result (unless specifically handled).</p>
<p>Key Points about Nulls in Spark:</p>
<ol>
<li>
<p><strong>Null propagation</strong>: If you do an arithmetic operation (e.g., <code>colA + colB</code>) and either <code>colA</code> or <code>colB</code> is null, the result is null unless there is a function to handle null explicitly (like coalesce).</p>
</li>
<li>
<p><strong>Comparison</strong>: Comparisons with null always yield false or unknown. For example, df.filter(<code>df("age") == null</code>) might not work as intended. Instead, you need to use methods like isNull or isNotNull.</p>
</li>
<li>
<p><strong>Equi-Null safe join</strong>: Spark SQL provides nullSafeEq or eqNullSafe (<code>&lt;=&gt;</code> in SQL) to compare two columns including nulls. This means if both sides are null, it returns true.</p>
</li>
</ol>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>In SQL, null is a marker, not a value.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="data-preparation">Data Preparation<a href="https://buildwithvibs.in/blog/handling-nulls-in-spark#data-preparation" class="hash-link" aria-label="Direct link to Data Preparation" title="Direct link to Data Preparation">​</a></h3>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> pyspark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">sql </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> SparkSession</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> pyspark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">functions </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> isnull</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> when</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> coalesce</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">spark </span><span class="token operator">=</span><span class="token plain"> SparkSession</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">builder \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">appName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"NullHandlingExample"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> \</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">getOrCreate</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">data </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">6.1</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token number">1071</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"12-Jun-98"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">                </span><span class="token string" style="color:rgb(255, 121, 198)">"The Land Girls"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">6.9</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token number">207</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token string" style="color:rgb(255, 121, 198)">"7-Aug-98"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">                </span><span class="token string" style="color:rgb(255, 121, 198)">"First Love, Last Rites"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">6.8</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token number">865</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token string" style="color:rgb(255, 121, 198)">"28-Aug-98"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">                </span><span class="token string" style="color:rgb(255, 121, 198)">"I Married a Strange Person"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5.8</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token number">3275</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"1-Jul-86"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"13"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">                </span><span class="token string" style="color:rgb(255, 121, 198)">"Pirates"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">3.4</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token number">165</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token string" style="color:rgb(255, 121, 198)">"9-Oct-98"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token string" style="color:rgb(255, 121, 198)">"62"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"Original Screenplay"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token string" style="color:rgb(255, 121, 198)">"Slam"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"15-Jan-99"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">                </span><span class="token string" style="color:rgb(255, 121, 198)">"Mississippi Mermaid"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">7.7</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token number">15133</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"4-Apr-99"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">                </span><span class="token string" style="color:rgb(255, 121, 198)">"Following"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">3.8</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token number">353</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token string" style="color:rgb(255, 121, 198)">"9-Apr-99"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"Original Screenplay"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token string" style="color:rgb(255, 121, 198)">"Foolish"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5.8</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token number">3275</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"1-Jul-86"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token string" style="color:rgb(255, 121, 198)">"25"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">                </span><span class="token string" style="color:rgb(255, 121, 198)">"Pirates"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">7.0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">   </span><span class="token number">2906</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"31-Dec-46"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"86"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token boolean">None</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">                </span><span class="token string" style="color:rgb(255, 121, 198)">"Duel in the Sun"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">columns </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Votes"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Release_Date"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Rotten_Tomatoes_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Source"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Title"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df </span><span class="token operator">=</span><span class="token plain"> spark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">createDataFrame</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> columns</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see the movies data with some null values.</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|IMDB_Rating|IMDB_Votes|Release_Date|Rotten_Tomatoes_Rating|Source             |Title                     |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.1        |1071      |12-Jun-98   |NULL                  |NULL               |The Land Girls            |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.9        |207       |7-Aug-98    |NULL                  |NULL               |First Love, Last Rites    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.8        |865       |28-Aug-98   |NULL                  |NULL               |I Married a Strange Person|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|5.8        |3275      |1-Jul-86    |13                    |NULL               |Pirates                   |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|3.4        |165       |9-Oct-98    |62                    |Original Screenplay|Slam                      |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|NULL       |NULL      |15-Jan-99   |NULL                  |NULL               |Mississippi Mermaid       |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|7.7        |15133     |4-Apr-99    |NULL                  |NULL               |Following                 |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|3.8        |353       |9-Apr-99    |NULL                  |Original Screenplay|Foolish                   |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|5.8        |3275      |1-Jul-86    |25                    |NULL               |Pirates                   |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|7.0        |2906      |31-Dec-46   |86                    |NULL               |Duel in the Sun           |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="coalesce">Coalesce<a href="https://buildwithvibs.in/blog/handling-nulls-in-spark#coalesce" class="hash-link" aria-label="Direct link to Coalesce" title="Direct link to Coalesce">​</a></h3>
<ul>
<li>In Spark SQL and DataFrame APIs, <code>coalesce()</code> is used to return the first non-null value among its arguments.</li>
<li>If you have multiple columns and want a single column which picks up a non-null value from one of them in order, or you want to replace a single column’s null value with a fallback.</li>
</ul>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">rating_df </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">select</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Title"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Rotten_Tomatoes_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">              coalesce</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Rotten_Tomatoes_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">alias</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">rating_df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see when <code>Rotten_Tomatoes_Rating</code> is null, <code>Rating</code> is calculated as <code>IMDB_Rating * 10</code>.</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+--------------------------+----------------------+-----------+------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Title                     |Rotten_Tomatoes_Rating|IMDB_Rating|Rating|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+--------------------------+----------------------+-----------+------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|The Land Girls            |NULL                  |6.1        |61.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|First Love, Last Rites    |NULL                  |6.9        |69.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|I Married a Strange Person|NULL                  |6.8        |68.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Pirates                   |13                    |5.8        |13    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Slam                      |62                    |3.4        |62    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Mississippi Mermaid       |NULL                  |NULL       |NULL  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Following                 |NULL                  |7.7        |77.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Foolish                   |NULL                  |3.8        |38.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Pirates                   |25                    |5.8        |25    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Duel in the Sun           |86                    |7.0        |86    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+--------------------------+----------------------+-----------+------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="checking-for-nulls">Checking for nulls<a href="https://buildwithvibs.in/blog/handling-nulls-in-spark#checking-for-nulls" class="hash-link" aria-label="Direct link to Checking for nulls" title="Direct link to Checking for nulls">​</a></h3>
<p>In Spark, null indicates missing or unknown data. To check if a column has null values, you can use:</p>
<ul>
<li><code>isNull()</code></li>
<li><code>isNotNull()</code></li>
<li><code>eqNullSafe()</code>: compares two columns, treating null values as equal.</li>
</ul>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Check if Rotten_Tomatoes_Rating is null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">check_nulls </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">select</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Title"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">               </span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Rotten_Tomatoes_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">               </span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">coalesce</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Rotten_Tomatoes_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">               </span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">*</span><span class="token plain"> </span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">alias</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">where</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">isNotNull</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">check_nulls</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see only rows where <code>Rating</code> is not null.</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+--------------------------+----------------------+-----------+------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Title                     |Rotten_Tomatoes_Rating|IMDB_Rating|Rating|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+--------------------------+----------------------+-----------+------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|The Land Girls            |NULL                  |6.1        |61.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|First Love, Last Rites    |NULL                  |6.9        |69.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|I Married a Strange Person|NULL                  |6.8        |68.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Pirates                   |13                    |5.8        |13    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Slam                      |62                    |3.4        |62    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Following                 |NULL                  |7.7        |77.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Foolish                   |NULL                  |3.8        |38.0  |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Pirates                   |25                    |5.8        |25    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Duel in the Sun           |86                    |7.0        |86    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+--------------------------+----------------------+-----------+------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<hr>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Check for equi-null safe join</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_eq_null_safe </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token builtin" style="color:rgb(189, 147, 249)">filter</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">eqNullSafe</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Rotten_Tomatoes_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_eq_null_safe</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see only rows where <code>IMDB_Rating</code> is equal to <code>Rotten_Tomatoes_Rating</code>.</summary><div><div class="collapsibleContent_i85q"><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">IMDB_Rating</span><span class="token operator">|</span><span class="token plain">IMDB_Votes</span><span class="token operator">|</span><span class="token plain">Release_Date</span><span class="token operator">|</span><span class="token plain">Rotten_Tomatoes_Rating</span><span class="token operator">|</span><span class="token plain">Source</span><span class="token operator">|</span><span class="token plain">              Title</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">       NULL</span><span class="token operator">|</span><span class="token plain">      NULL</span><span class="token operator">|</span><span class="token plain">   </span><span class="token number">15</span><span class="token operator">-</span><span class="token plain">Jan</span><span class="token operator">-</span><span class="token number">99</span><span class="token operator">|</span><span class="token plain">                  NULL</span><span class="token operator">|</span><span class="token plain">  NULL</span><span class="token operator">|</span><span class="token plain">Mississippi Mermaid</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="nulls-when-ordering-columns">Nulls when ordering columns<a href="https://buildwithvibs.in/blog/handling-nulls-in-spark#nulls-when-ordering-columns" class="hash-link" aria-label="Direct link to Nulls when ordering columns" title="Direct link to Nulls when ordering columns">​</a></h3>
<p>When you order a DataFrame in Spark, null handling can change your result. By default, Spark sorts <code>nulls first in ascending order</code> and <code>last in descending order</code>.</p>
<ol>
<li><code>asc_nulls_first</code>: Ascending order, placing nulls at the top.</li>
<li><code>asc_nulls_last</code>: Ascending order, placing nulls at the bottom.</li>
<li><code>desc_nulls_first</code>: Descending order, placing nulls at the top.</li>
<li><code>desc_nulls_last</code>: Descending order, placing nulls at the bottom</li>
</ol>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Move nulls to the end in descending order</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">move_nulls_to_end </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">orderBy</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Rotten_Tomatoes_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">desc_nulls_last</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">move_nulls_to_end</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see the rows ordered by <code>Rotten_Tomatoes_Rating</code> with nulls at the end.</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|IMDB_Rating|IMDB_Votes|Release_Date|Rotten_Tomatoes_Rating|             Source|               Title|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        7.0|      2906|   31-Dec-46|                    86|               NULL|     Duel in the Sun|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        3.4|       165|    9-Oct-98|                    62|Original Screenplay|                Slam|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        5.8|      3275|    1-Jul-86|                    25|               NULL|             Pirates|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        5.8|      3275|    1-Jul-86|                    13|               NULL|             Pirates|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        6.9|       207|    7-Aug-98|                  NULL|               NULL|First Love, Last ...|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|       NULL|      NULL|   15-Jan-99|                  NULL|               NULL| Mississippi Mermaid|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        7.7|     15133|    4-Apr-99|                  NULL|               NULL|           Following|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        6.8|       865|   28-Aug-98|                  NULL|               NULL|I Married a Stran...|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        3.8|       353|    9-Apr-99|                  NULL|Original Screenplay|             Foolish|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        6.1|      1071|   12-Jun-98|                  NULL|               NULL|      The Land Girls|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="replace-nulls-with-a-value">Replace nulls with a value<a href="https://buildwithvibs.in/blog/handling-nulls-in-spark#replace-nulls-with-a-value" class="hash-link" aria-label="Direct link to Replace nulls with a value" title="Direct link to Replace nulls with a value">​</a></h3>
<p>Spark provides multiple ways to replace null values:</p>
<ul>
<li><code>DataFrame.na.fill(value, subset=None)</code> – Fill null values in specified columns.</li>
<li><code>DataFrame.fillna(value, subset=None)</code> – Same as na.fill, a common alias.</li>
</ul>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Replace nulls with a value for Source column</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">replace_nulls </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">na</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fill</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Un Source"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"Source"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">replace_nulls</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see the rows with nulls in the <code>Source</code> column replaced with <code>Un Source</code>.</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|IMDB_Rating|IMDB_Votes|Release_Date|Rotten_Tomatoes_Rating|Source             |Title                     |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.1        |1071      |12-Jun-98   |NULL                  |Un Source          |The Land Girls            |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.9        |207       |7-Aug-98    |NULL                  |Un Source          |First Love, Last Rites    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.8        |865       |28-Aug-98   |NULL                  |Un Source          |I Married a Strange Person|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|5.8        |3275      |1-Jul-86    |13                    |Un Source          |Pirates                   |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|3.4        |165       |9-Oct-98    |62                    |Original Screenplay|Slam                      |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Replacing multiple columns with nulls</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">fill_values </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">0.0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Votes"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">  </span><span class="token number">0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"Source"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain">      </span><span class="token string" style="color:rgb(255, 121, 198)">"Unknown Source"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_fill_multiple </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">na</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">fill</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">fill_values</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_fill_multiple</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see the rows with nulls in the specified columns replaced with the provided values.</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|IMDB_Rating|IMDB_Votes|Release_Date|Rotten_Tomatoes_Rating|Source             |Title                     |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.1        |1071      |12-Jun-98   |NULL                  |Unknown Source     |The Land Girls            |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.9        |207       |7-Aug-98    |NULL                  |Unknown Source     |First Love, Last Rites    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.8        |865       |28-Aug-98   |NULL                  |Unknown Source     |I Married a Strange Person|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|5.8        |3275      |1-Jul-86    |13                    |Unknown Source     |Pirates                   |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|3.4        |165       |9-Oct-98    |62                    |Original Screenplay|Slam                      |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="remove-nulls">Remove nulls<a href="https://buildwithvibs.in/blog/handling-nulls-in-spark#remove-nulls" class="hash-link" aria-label="Direct link to Remove nulls" title="Direct link to Remove nulls">​</a></h3>
<p>Sometimes you might want to drop rows that contain any null or all nulls, or conditionally drop rows with null in specific columns.</p>
<p>Example 1:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Drop rows with all null values</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_drop_any </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">na</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">drop</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"any"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># "any" means if any column in the row has null, that row is dropped.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_drop_any</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see the rows with any null values dropped.</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+-----+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|IMDB_Rating|IMDB_Votes|Release_Date|Rotten_Tomatoes_Rating|             Source|Title|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+-----+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|        3.4|       165|    9-Oct-98|                    62|Original Screenplay| Slam|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+-----+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<p>Example 2:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Drop rows with all null values</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_drop_all </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">na</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">drop</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"all"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># "all" means a row must have all columns as null to be dropped.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_drop_all</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see the rows with all null values dropped.</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|IMDB_Rating|IMDB_Votes|Release_Date|Rotten_Tomatoes_Rating|Source             |Title                     |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.1        |1071      |12-Jun-98   |NULL                  |NULL               |The Land Girls            |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.9        |207       |7-Aug-98    |NULL                  |NULL               |First Love, Last Rites    |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|6.8        |865       |28-Aug-98   |NULL                  |NULL               |I Married a Strange Person|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|5.8        |3275      |1-Jul-86    |13                    |NULL               |Pirates                   |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|3.4        |165       |9-Oct-98    |62                    |Original Screenplay|Slam                      |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+-----------+----------+------------+----------------------+-------------------+--------------------------+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<p>Example 3:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token comment" style="color:rgb(98, 114, 164)"># Drop rows if "IMDB_Rating" or "IMDB_Votes" is null</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_drop_subset </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">na</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">drop</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"any"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> subset</span><span class="token operator">=</span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Votes"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">df_drop_subset</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see the rows with null values in <code>IMDB_Rating</code> or <code>IMDB_Votes</code> dropped.</summary><div><div class="collapsibleContent_i85q"><div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">IMDB_Rating</span><span class="token operator">|</span><span class="token plain">IMDB_Votes</span><span class="token operator">|</span><span class="token plain">Release_Date</span><span class="token operator">|</span><span class="token plain">Rotten_Tomatoes_Rating</span><span class="token operator">|</span><span class="token plain">             Source</span><span class="token operator">|</span><span class="token plain">               Title</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">        </span><span class="token number">6.1</span><span class="token operator">|</span><span class="token plain">      </span><span class="token number">1071</span><span class="token operator">|</span><span class="token plain">   </span><span class="token number">12</span><span class="token operator">-</span><span class="token plain">Jun</span><span class="token operator">-</span><span class="token number">98</span><span class="token operator">|</span><span class="token plain">                  NULL</span><span class="token operator">|</span><span class="token plain">               NULL</span><span class="token operator">|</span><span class="token plain">      The Land Girls</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">        </span><span class="token number">6.9</span><span class="token operator">|</span><span class="token plain">       </span><span class="token number">207</span><span class="token operator">|</span><span class="token plain">    </span><span class="token number">7</span><span class="token operator">-</span><span class="token plain">Aug</span><span class="token operator">-</span><span class="token number">98</span><span class="token operator">|</span><span class="token plain">                  NULL</span><span class="token operator">|</span><span class="token plain">               NULL</span><span class="token operator">|</span><span class="token plain">First Love</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> Last </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">        </span><span class="token number">6.8</span><span class="token operator">|</span><span class="token plain">       </span><span class="token number">865</span><span class="token operator">|</span><span class="token plain">   </span><span class="token number">28</span><span class="token operator">-</span><span class="token plain">Aug</span><span class="token operator">-</span><span class="token number">98</span><span class="token operator">|</span><span class="token plain">                  NULL</span><span class="token operator">|</span><span class="token plain">               NULL</span><span class="token operator">|</span><span class="token plain">I Married a Stran</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">        </span><span class="token number">5.8</span><span class="token operator">|</span><span class="token plain">      </span><span class="token number">3275</span><span class="token operator">|</span><span class="token plain">    </span><span class="token number">1</span><span class="token operator">-</span><span class="token plain">Jul</span><span class="token operator">-</span><span class="token number">86</span><span class="token operator">|</span><span class="token plain">                    </span><span class="token number">13</span><span class="token operator">|</span><span class="token plain">               NULL</span><span class="token operator">|</span><span class="token plain">             Pirates</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">        </span><span class="token number">3.4</span><span class="token operator">|</span><span class="token plain">       </span><span class="token number">165</span><span class="token operator">|</span><span class="token plain">    </span><span class="token number">9</span><span class="token operator">-</span><span class="token plain">Oct</span><span class="token operator">-</span><span class="token number">98</span><span class="token operator">|</span><span class="token plain">                    </span><span class="token number">62</span><span class="token operator">|</span><span class="token plain">Original Screenplay</span><span class="token operator">|</span><span class="token plain">                Slam</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">        </span><span class="token number">7.7</span><span class="token operator">|</span><span class="token plain">     </span><span class="token number">15133</span><span class="token operator">|</span><span class="token plain">    </span><span class="token number">4</span><span class="token operator">-</span><span class="token plain">Apr</span><span class="token operator">-</span><span class="token number">99</span><span class="token operator">|</span><span class="token plain">                  NULL</span><span class="token operator">|</span><span class="token plain">               NULL</span><span class="token operator">|</span><span class="token plain">           Following</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">        </span><span class="token number">3.8</span><span class="token operator">|</span><span class="token plain">       </span><span class="token number">353</span><span class="token operator">|</span><span class="token plain">    </span><span class="token number">9</span><span class="token operator">-</span><span class="token plain">Apr</span><span class="token operator">-</span><span class="token number">99</span><span class="token operator">|</span><span class="token plain">                  NULL</span><span class="token operator">|</span><span class="token plain">Original Screenplay</span><span class="token operator">|</span><span class="token plain">             Foolish</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">        </span><span class="token number">5.8</span><span class="token operator">|</span><span class="token plain">      </span><span class="token number">3275</span><span class="token operator">|</span><span class="token plain">    </span><span class="token number">1</span><span class="token operator">-</span><span class="token plain">Jul</span><span class="token operator">-</span><span class="token number">86</span><span class="token operator">|</span><span class="token plain">                    </span><span class="token number">25</span><span class="token operator">|</span><span class="token plain">               NULL</span><span class="token operator">|</span><span class="token plain">             Pirates</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">|</span><span class="token plain">        </span><span class="token number">7.0</span><span class="token operator">|</span><span class="token plain">      </span><span class="token number">2906</span><span class="token operator">|</span><span class="token plain">   </span><span class="token number">31</span><span class="token operator">-</span><span class="token plain">Dec</span><span class="token operator">-</span><span class="token number">46</span><span class="token operator">|</span><span class="token plain">                    </span><span class="token number">86</span><span class="token operator">|</span><span class="token plain">               NULL</span><span class="token operator">|</span><span class="token plain">     Duel </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">in</span><span class="token plain"> the Sun</span><span class="token operator">|</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="special-null-functions">Special Null functions<a href="https://buildwithvibs.in/blog/handling-nulls-in-spark#special-null-functions" class="hash-link" aria-label="Direct link to Special Null functions" title="Direct link to Special Null functions">​</a></h3>
<ol>
<li><strong>equal_null</strong>: Returns <code>true</code> if both expressions are equal (including both being <code>NULL</code>), else <code>false</code>.</li>
<li><strong>ifnull</strong>: Returns the second expression if the first is <code>NULL</code>, otherwise returns the first. Same as <code>coalesce</code>.</li>
<li><strong>nvl</strong>: Same as <code>ifnull</code>—substitutes a <code>NULL</code> value with a provided fallback. Same as <code>coalesce</code>.</li>
<li><strong>nullif</strong>: Returns <code>NULL</code> if both expressions match, otherwise returns the first expression.</li>
<li><strong>nvl2</strong>: Returns the second expression if the first is not <code>NULL</code>, otherwise returns the third.</li>
</ol>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">special_nulls </span><span class="token operator">=</span><span class="token plain"> df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">selectExpr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"Title"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"Rotten_Tomatoes_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"IMDB_Rating"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"equal_null(Rotten_Tomatoes_Rating, IMDB_Rating) as equal_null"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"ifnull(Rotten_Tomatoes_Rating, IMDB_Rating * 10) as if_null"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"nvl(Rotten_Tomatoes_Rating, IMDB_Rating * 10) as nvl"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"nullif(Rotten_Tomatoes_Rating, IMDB_Rating * 10) as nullif"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">"nvl2(Rotten_Tomatoes_Rating, IMDB_Rating * 10, 0.0)"</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># if (first != null) second else third</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">special_nulls</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token boolean">False</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<details class="details_lb9f alert alert--info details_b_Ee" data-collapsed="true"><summary>Output: You will see the special null functions applied to the columns.</summary><div><div class="collapsibleContent_i85q"><div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">+--------------------------+----------------------+-----------+----------+-------+----+------+----+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Title                     |Rotten_Tomatoes_Rating|IMDB_Rating|equal_null|if_null|nvl |nullif|nvl2|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+--------------------------+----------------------+-----------+----------+-------+----+------+----+</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|The Land Girls            |NULL                  |6.1        |false     |61.0   |61.0|NULL  |0.0 |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|First Love, Last Rites    |NULL                  |6.9        |false     |69.0   |69.0|NULL  |0.0 |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|I Married a Strange Person|NULL                  |6.8        |false     |68.0   |68.0|NULL  |0.0 |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Pirates                   |13                    |5.8        |false     |13     |13  |13    |58.0|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Slam                      |62                    |3.4        |false     |62     |62  |62    |34.0|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Mississippi Mermaid       |NULL                  |NULL       |true      |NULL   |NULL|NULL  |0.0 |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Following                 |NULL                  |7.7        |false     |77.0   |77.0|NULL  |0.0 |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Foolish                   |NULL                  |3.8        |false     |38.0   |38.0|NULL  |0.0 |</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Pirates                   |25                    |5.8        |false     |25     |25  |25    |58.0|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">|Duel in the Sun           |86                    |7.0        |false     |86     |86  |86    |70.0|</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">+--------------------------+----------------------+-----------+----------+-------+----+------+----+</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div></div></div></details>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://buildwithvibs.in/blog/handling-nulls-in-spark#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>Putting all together -</p>
<table><thead><tr><th><strong>Function / Operation</strong></th><th><strong>One-Line Explanation</strong></th></tr></thead><tbody><tr><td><strong>coalesce(expr1, expr2, …)</strong></td><td>Returns the first non-null expression in the list.</td></tr><tr><td><strong>isNull(column)</strong></td><td>Checks if the column’s value is null, returning a boolean.</td></tr><tr><td><strong>isNotNull(column)</strong></td><td>Checks if the column’s value is not null, returning a boolean.</td></tr><tr><td><strong>eqNullSafe(col1, col2)</strong> or <strong>col1 <code>&lt;=&gt;</code> col2</strong></td><td>Returns <code>true</code> if <code>col1</code> equals <code>col2</code> or both are null, otherwise <code>false</code>.</td></tr><tr><td><strong>ifnull(expr1, expr2)</strong></td><td>Returns <code>expr2</code> if <code>expr1</code> is null, otherwise returns <code>expr1</code>.</td></tr><tr><td><strong>nvl(expr1, expr2)</strong></td><td>Same as <code>ifnull</code>: substitutes <code>expr2</code> when <code>expr1</code> is null.</td></tr><tr><td><strong>nullif(expr1, expr2)</strong></td><td>Returns <code>NULL</code> if <code>expr1</code> equals <code>expr2</code>, otherwise returns <code>expr1</code>.</td></tr><tr><td><strong>nvl2(expr1, expr2, expr3)</strong></td><td>Returns <code>expr2</code> if <code>expr1</code> is not null, otherwise returns <code>expr3</code>.</td></tr><tr><td><strong>fillna / na.fill(value[, subset])</strong></td><td>Replaces null values in specified columns (or all) with a given value.</td></tr><tr><td><strong>dropna / na.drop([how, subset])</strong></td><td>Removes rows containing null values (based on any/all columns or a subset).</td></tr><tr><td><strong>asc_nulls_first / asc_nulls_last</strong> (when sorting)</td><td>Orders rows ascending, placing nulls either first or last.</td></tr><tr><td><strong>desc_nulls_first / desc_nulls_last</strong> (when sorting)</td><td>Orders rows descending, placing nulls either first or last.</td></tr></tbody></table>
<p>I hope you enjoyed reading this blog on handling nulls in Spark, if you are interested in more such content, do check out <a href="https://buildwithvibs.in/blog/tags/apache-spark">Apache Spark</a>. series.</p>
<p>If you have any questions or feedback, feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>data-engineering</category>
            <category>apache-spark</category>
        </item>
        <item>
            <title><![CDATA[Columns and Expressions]]></title>
            <link>https://buildwithvibs.in/blog/columns-and-expressions</link>
            <guid>https://buildwithvibs.in/blog/columns-and-expressions</guid>
            <pubDate>Fri, 10 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Apache Spark's Column and Expression play a big role in making your pipeline more efficient. In this blog we will look into ALL the possible ways to select columns, use built-in functions and perform calculations with column objects and expressions in PySpark. So, whether you build an ETL pipeline or doing exploratory data analysis, these techniques methods will come in handy.]]></description>
            <content:encoded><![CDATA[<p>Apache Spark's <code>Column and Expression</code> play a big role in making your pipeline more efficient. In this blog we will look into ALL the possible ways to select columns, use built-in functions and perform calculations with column objects and expressions in PySpark. So, whether you build an ETL pipeline or doing exploratory data analysis, these techniques methods will come in handy.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="columns-and-experssions">Columns and Experssions<a href="https://buildwithvibs.in/blog/columns-and-expressions#columns-and-experssions" class="hash-link" aria-label="Direct link to Columns and Experssions" title="Direct link to Columns and Experssions">​</a></h2>
<p>In Spark, columns are not actual data; they are logical constructs—formulas, basically—that say how to calculate a value for every row in a table. These formulas by themselves don’t contain any real data, just return real values when they are applied to rows in a DataFrame. For this reason, columns can’t exist in isolation — you need a DataFrame and some of its rows for a column’s formula to be evaluated. Therefore, the creation or manipulation of columns should always occur by transforming on a DataFrame instead of on the column alone.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="ways-of-constructing-the-column">Ways of Constructing the Column<a href="https://buildwithvibs.in/blog/columns-and-expressions#ways-of-constructing-the-column" class="hash-link" aria-label="Direct link to Ways of Constructing the Column" title="Direct link to Ways of Constructing the Column">​</a></h3>
<p>There are many ways to construct and refer to columns but the simplest ways are by using the <code>col, column functions or expr</code>. <code>col(), column() or expr</code> are from package <code>pyspark.sql.functions</code>. Find the syntax below:</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> pyspark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">functions </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> column</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> expr</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"columnName"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">column</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"columnName"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">expr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"columnName"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="selecting-columns">Selecting Columns<a href="https://buildwithvibs.in/blog/columns-and-expressions#selecting-columns" class="hash-link" aria-label="Direct link to Selecting Columns" title="Direct link to Selecting Columns">​</a></h3>
<p>You can select columns from a DataFrame using the <code>select()</code> method. the <code>select()</code> takes a list of column objects or expressions.</p>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up-the-spark-session-and-dummy-data">Setting up the Spark Session and dummy data<a href="https://buildwithvibs.in/blog/columns-and-expressions#setting-up-the-spark-session-and-dummy-data" class="hash-link" aria-label="Direct link to Setting up the Spark Session and dummy data" title="Direct link to Setting up the Spark Session and dummy data">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> pyspark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">sql </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> SparkSession</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> pyspark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">functions </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> column</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> expr</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">spark_session </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    SparkSession</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">builder</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">appName</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"ColumnsAndExpressionsDemo"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">config</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"spark.master"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"local"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">getOrCreate</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">data </span><span class="token operator">=</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car1"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">130</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">12.0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3504</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1970</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car2"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">165</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">11.5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3693</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1970</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car3"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">150</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">10.5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3436</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1970</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car4"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">150</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">10.0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3761</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1970</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car5"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">140</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">9.0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3200</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1971</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car6"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">198</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">8.5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">4341</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1971</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car7"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">220</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">8.0</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">4354</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1971</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car8"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">215</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">7.5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">4312</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1972</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car9"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">225</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">7.7</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">4425</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1972</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token punctuation" style="color:rgb(248, 248, 242)">{</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"car10"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token string" style="color:rgb(255, 121, 198)">"Horsepower"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">190</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">9.5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">  </span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">3850</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">"Year"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> </span><span class="token number">1972</span><span class="token punctuation" style="color:rgb(248, 248, 242)">}</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cars_df </span><span class="token operator">=</span><span class="token plain"> spark_session</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">createDataFrame</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain">data</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cars_df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="selecting-columns-using-col-and-select">Selecting Columns using <code>col</code> and <code>select</code><a href="https://buildwithvibs.in/blog/columns-and-expressions#selecting-columns-using-col-and-select" class="hash-link" aria-label="Direct link to selecting-columns-using-col-and-select" title="Direct link to selecting-columns-using-col-and-select">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">first_column </span><span class="token operator">=</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">  </span><span class="token comment" style="color:rgb(98, 114, 164)"># return Column object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cars_df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">select</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    first_column</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># using Column object</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Acceleration"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    column</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    cars_df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">Weight_in_lbs</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># using dot (.) notation</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Horsepower'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain">       </span><span class="token comment" style="color:rgb(98, 114, 164)"># using string-based column reference</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    expr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'Year'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain">        </span><span class="token comment" style="color:rgb(98, 114, 164)"># using Spark SQL expression</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">10</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li><span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">col("columnName") and column("columnName")</span> are functionally equivalent. They create a Column object that you can pass to DataFrame transformations.</li>
<li>You can also refer to columns directly by their <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">string name ('Horsepower')</span>.</li>
<li><span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">expr("Year")</span> showcases how you can mix SQL expressions right within the select statement.</li>
</ul>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="performing-calculations-with-columns">Performing Calculations with Columns<a href="https://buildwithvibs.in/blog/columns-and-expressions#performing-calculations-with-columns" class="hash-link" aria-label="Direct link to Performing Calculations with Columns" title="Direct link to Performing Calculations with Columns">​</a></h4>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">from</span><span class="token plain"> pyspark</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">sql</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">column </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">import</span><span class="token plain"> Column</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">simple_expression</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Column </span><span class="token operator">=</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">weight_in_kgs_expression</span><span class="token punctuation" style="color:rgb(248, 248, 242)">:</span><span class="token plain"> Column </span><span class="token operator">=</span><span class="token plain"> col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token operator">/</span><span class="token plain"> </span><span class="token number">2.2</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># performing arithmetic on columns</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cars_df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">select</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    weight_in_kgs_expression</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">alias</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_kgs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ol>
<li>Spark allows you to perform arithmetic on columns just like regular Python variables.</li>
<li>alias("Weight_in_kgs") labels your computed column for clarity in the output.</li>
</ol>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="using-expr-to-perform-calculations">Using <code>expr</code> to perform calculations<a href="https://buildwithvibs.in/blog/columns-and-expressions#using-expr-to-perform-calculations" class="hash-link" aria-label="Direct link to using-expr-to-perform-calculations" title="Direct link to using-expr-to-perform-calculations">​</a></h4>
<p>An expression is a set of transformations on one or more values in a record in a DataFrame. Think of it like a function that takes as input one or more column names, resolves them, and then potentially applies more expressions to create a single value for each record in the dataset.</p>
<p>In the simplest case, an expression, created via the <code>expr function</code>, is just a DataFrame column reference. In the simplest case, expr("someCol") is equivalent to col("someCol").</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">print</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Select with expr..."</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cars_df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">select</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Name"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    col</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    expr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">"Weight_in_lbs / 2.2"</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"> </span><span class="token comment" style="color:rgb(98, 114, 164)"># using expr to perform arithmetic</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h4 class="anchor anchorWithStickyNavbar_LWe7" id="using-selectexpr">Using <code>selectExpr</code><a href="https://buildwithvibs.in/blog/columns-and-expressions#using-selectexpr" class="hash-link" aria-label="Direct link to using-selectexpr" title="Direct link to using-selectexpr">​</a></h4>
<p>The <code>select method</code> when you’re working with columns or expressions, and the <code>selectExpr method</code> when you’re working with expressions in strings.</p>
<div class="language-python codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-python codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">cars_df</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">selectExpr</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Name'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Weight_in_lbs'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">    </span><span class="token string" style="color:rgb(255, 121, 198)">'Weight_in_lbs / 2.2'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain"></span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">.</span><span class="token plain">show</span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token number">5</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="conclusion">Conclusion<a href="https://buildwithvibs.in/blog/columns-and-expressions#conclusion" class="hash-link" aria-label="Direct link to Conclusion" title="Direct link to Conclusion">​</a></h2>
<p>Choosing between <code>col()</code>, <code>column()</code>, <code>expr()</code>, or even raw string references comes down to personal preference, readability, and complexity of your transformations. For simple column references, col() is often the most straightforward. However, if you prefer writing SQL-like expressions directly in your code or need complex SQL functions, <code>expr()</code> and <code>selectExpr()</code> provide the flexibility you need.</p>
<hr>
<p>I hope this blog helped you understand the use of <code>Columns and Expressions</code> in Apache Spark. If you are interested in more such content, do check out <a href="https://buildwithvibs.in/blog/tags/apache-spark">Apache Spark</a>. series.</p>
<p>If you have any questions or feedback, feel free to reach out to me on</p>
<div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div>]]></content:encoded>
            <category>data-engineering</category>
            <category>apache-spark</category>
        </item>
        <item>
            <title><![CDATA[Introduction to Apache Spark]]></title>
            <link>https://buildwithvibs.in/blog/spark-basics</link>
            <guid>https://buildwithvibs.in/blog/spark-basics</guid>
            <pubDate>Wed, 01 Jan 2025 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome to my Apache Spark series! I’ll dive deep into Apache Spark, from basics to advanced concepts. This series is about learning, exploring, and sharing—documenting my journey to mastering Apache Spark ( again ) while sharing insights, challenges, and tips.]]></description>
            <content:encoded><![CDATA[<p>Welcome to my <a href="https://buildwithvibs.in/blog/tags/apache-spark">Apache Spark</a> series! I’ll dive deep into Apache Spark, from basics to advanced concepts. This series is about learning, exploring, and sharing—documenting my journey to mastering Apache Spark ( again ) while sharing insights, challenges, and tips.</p>
<p>In this first post, we’ll cover the fundamentals of Apache Spark, its history, and why it’s a game-changer in data engineering.</p>
<p>Find all the blogs in the series <a href="https://buildwithvibs.in/blog/tags/apache-spark">here</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="spark-history">Spark History<a href="https://buildwithvibs.in/blog/spark-basics#spark-history" class="hash-link" aria-label="Direct link to Spark History" title="Direct link to Spark History">​</a></h2>
<p>Apache Spark started as a research project by <a href="https://www.linkedin.com/in/mateizaharia/" target="_blank" rel="noopener noreferrer">Matei Zaharia</a> at the University of California, Berkeley's AMPLab in 2009 which focuses on big data analytics. The project was open-sourced in 2010, initially focused on MapReduce computing with a faster API.</p>
<p>The aim was to design a programming model that supports a much wider class of applications than MapReduce, while maintaining its automatic fault tolerance.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="motivation-for-apache-spark">Motivation for Apache Spark<a href="https://buildwithvibs.in/blog/spark-basics#motivation-for-apache-spark" class="hash-link" aria-label="Direct link to Motivation for Apache Spark" title="Direct link to Motivation for Apache Spark">​</a></h3>
<p>At the time, MapReduce was the de facto standard for big data processing, but it had notable limitations:</p>
<ul>
<li><strong>Inefficiency for Complex Applications</strong>: MapReduce required multiple disk I/O operations, as each intermediate computation step wrote data to disk, significantly slowing down iterative tasks like machine learning algorithms or graph processing.</li>
<li><strong>Rigid Programming Model</strong>: Developers were constrained to writing programs in the Map and Reduce paradigm, making it less intuitive for complex workflows or real-time analytics.</li>
<li><strong>Lack of In-Memory Processing</strong>: MapReduce did not leverage in-memory computation effectively, leading to unnecessary overhead in cases where intermediate data could be reused.</li>
</ul>
<p>These shortcomings paved the way for <strong>Apache Spark</strong>, designed to address these inefficiencies with its distributed in-memory computation framework. Spark introduced a more flexible programming model and faster execution capabilities, making it ideal for iterative algorithms and large-scale data processing.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-apache-spark">What is Apache Spark?<a href="https://buildwithvibs.in/blog/spark-basics#what-is-apache-spark" class="hash-link" aria-label="Direct link to What is Apache Spark?" title="Direct link to What is Apache Spark?">​</a></h2>
<p>Apache Spark is an <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">open-source, unified computing engine and libraries for distributed data processing</span>.</p>
<ul>
<li>
<p><strong>Unified Computing Engine</strong></p>
<ul>
<li>Spark provides a variety of data processing tasks like data loading, SQL queries, machine learning, and graph processing in a single framework etc.</li>
<li>It is consistent and composable API in multiple languages like Scala, Java, Python, and R.</li>
<li>It can optimizations across different libraries and workloads.</li>
<li>Computing Engine: Spark is completely detached from where the data resides and data is being fetched</li>
</ul>
</li>
<li>
<p><strong>Distributed Data Processing</strong>:</p>
<ul>
<li>Spark is designed to process large volumes of data in parallel across a cluster of machines.</li>
</ul>
</li>
</ul>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><p>Spark is not a database, it is a distributed computing engine that can process large volumes of data in parallel across a cluster of machines.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-apache-spark">Why Apache Spark?<a href="https://buildwithvibs.in/blog/spark-basics#why-apache-spark" class="hash-link" aria-label="Direct link to Why Apache Spark?" title="Direct link to Why Apache Spark?">​</a></h2>
<p>Spark is designed to enhance the capabilities of Hadoop, particularly for applications involving <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">iterative jobs and interactive analytics </span> where data reuse is crucial.</p>
<ul>
<li>
<p><strong>Superior Performance for Iterative Tasks:</strong> Spark excels in iterative jobs common in machine learning. It <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">caches data in memory across iterations</span>, eliminating the need to reload from disk for each cycle, resulting in substantial performance gains over Hadoop.</p>
</li>
<li>
<p><strong>Enabling Interactive Data Exploration:</strong> Spark empowers users with <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">sub-second response times for interactive queries on large datasets</span>. Unlike Hadoop, which incurs significant latency for each query, Spark provides an experience comparable to working with data locally.</p>
</li>
<li>
<p><strong>Resilience and Fault Tolerance:</strong> Spark leverages the concept of Resilient Distributed Datasets (RDDs). RDDs track data lineage, allowing for <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">efficient reconstruction of lost partitions in case of node failures</span> without relying on resource-intensive checkpointing.</p>
</li>
<li>
<p><strong>Efficient Data Sharing:</strong> Spark offers broadcast variables, enabling the distribution of large read-only datasets across worker nodes only once. This contrasts with Hadoop's distributed cache, which is limited to single jobs, resulting in reduced data transfer overheads.</p>
</li>
<li>
<p><strong>Simplified Programming Model:</strong> Spark's abstractions like RDDs, shared variables, and parallel operations offer a <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">higher-level, more user-friendly programming model compared to Hadoop</span>. Its integration with languages like Scala promotes interactive development and simplifies the expression of complex computations.</p>
</li>
</ul>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Spark is not a part of the Hadoop ecosystem, but it can run on top of Hadoop YARN, providing a more efficient and flexible alternative to MapReduce for data processing.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="spark-ecosystem">Spark Ecosystem<a href="https://buildwithvibs.in/blog/spark-basics#spark-ecosystem" class="hash-link" aria-label="Direct link to Spark Ecosystem" title="Direct link to Spark Ecosystem">​</a></h2>
<table><thead><tr><th><strong>Component</strong></th><th><strong>Purpose</strong></th><th><strong>Key Features</strong></th><th><strong>Use Cases</strong></th></tr></thead><tbody><tr><td><strong>Spark Core</strong></td><td>General-purpose distributed computing.</td><td>Task scheduling, memory management, fault recovery, and interaction with storage.</td><td>Foundation for all other Spark components.</td></tr><tr><td><strong>Spark SQL</strong></td><td>Structured data processing.</td><td>SQL queries, DataFrames/Datasets, Hive integration, and schema management.</td><td>Batch processing, data warehousing, ETL tasks.</td></tr><tr><td><strong>Spark Streaming</strong></td><td>Real-time data processing.</td><td>Processes data in micro-batches, supports Kafka, Flume, and file streams.</td><td>Real-time dashboards, log monitoring.</td></tr><tr><td><strong>MLlib</strong></td><td>Machine learning library.</td><td>Algorithms for classification, regression, clustering, and recommendation.</td><td>Predictive analytics, recommendation engines.</td></tr><tr><td><strong>GraphX</strong></td><td>Graph processing and computation.</td><td>API for graph-parallel computations, pre-built graph algorithms.</td><td>Social network analysis, PageRank.</td></tr><tr><td><strong>SparkR</strong></td><td>R-based analytics in Spark.</td><td>R frontend for statistical analysis and machine learning using Spark.</td><td>Data exploration, statistical modeling.</td></tr></tbody></table>
<p><img decoding="async" loading="lazy" alt="Spark Ecosystem" src="https://buildwithvibs.in/assets/images/spark-ecosystem-933c40088964f9592a792816fe736bdf.png" width="2262" height="1284" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="references">References<a href="https://buildwithvibs.in/blog/spark-basics#references" class="hash-link" aria-label="Direct link to References" title="Direct link to References">​</a></h2>
<ol>
<li><a href="https://youtu.be/OLJKIogf2nU?si=m0l_73WADiwmL4I0" target="_blank" rel="noopener noreferrer">Spark + AI Summit 2020 - Matei Zaharia Keynote</a></li>
<li><a href="https://spark.apache.org/docs/latest/index.html" target="_blank" rel="noopener noreferrer">Apache Spark Documentation</a></li>
<li><a href="https://en.wikipedia.org/wiki/Apache_Spark" target="_blank" rel="noopener noreferrer">Wiki - Apache Spark</a></li>
</ol>
<p>I hope you enjoyed reading this blog on Apache Spark introduction . If you have any questions or feedback, feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>data-engineering</category>
            <category>apache-spark</category>
        </item>
        <item>
            <title><![CDATA[Data Modelling - Fact vs Dimension]]></title>
            <link>https://buildwithvibs.in/blog/de-bootcamp-fact-vs-dimension</link>
            <guid>https://buildwithvibs.in/blog/de-bootcamp-fact-vs-dimension</guid>
            <pubDate>Thu, 19 Dec 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[I'm sharing my learnings from the Data Engineering Bootcamp, where we are currently focusing on Fact vs Dimension.]]></description>
            <content:encoded><![CDATA[<p>I'm sharing my learnings from the Data Engineering Bootcamp, where we are currently focusing on Fact vs Dimension.</p>
<table><thead><tr><th>Resource</th><th>Link</th></tr></thead><tbody><tr><td>DataExpert.io</td><td><a href="https://bootcamp.techcreator.io/lessons" target="_blank" rel="noopener noreferrer">DataExpert.io</a></td></tr><tr><td>Zach Wilson on LinkedIn</td><td><a href="https://www.linkedin.com/in/eczachly/" target="_blank" rel="noopener noreferrer">LinkedIn</a></td></tr></tbody></table>
<p>Thank you, Zach, for your invaluable guidance and this comprehensive bootcamp!</p>
<hr>
<p>Week-2, Day-2: Fact vs Dimension</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="fact-vs-dimension">Fact vs Dimension<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-vs-dimension#fact-vs-dimension" class="hash-link" aria-label="Direct link to Fact vs Dimension" title="Direct link to Fact vs Dimension">​</a></h2>
<ul>
<li>The examples of <code>dim is active</code> and <code>dim is activated</code>, both user dimensions on Facebook.</li>
<li><code>Dim is active</code> is based on whether a user has engaged with the app in a given timeframe. This could be considered an aggregation of facts (e.g. likes, comments, shares), potentially making it difficult to categorise as purely a dimension.</li>
<li>In contrast, <code>dim is activated</code> indicates whether a user has explicitly deactivated their account. This is a pure dimension, as it's an attribute of the user object, independent of their actions within the app.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="bucketisation">Bucketisation<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-vs-dimension#bucketisation" class="hash-link" aria-label="Direct link to Bucketisation" title="Direct link to Bucketisation">​</a></h3>
<ul>
<li><strong>Necessity for Meaningful Analysis:</strong> When creating dimensions based on user activity (e.g., number of likes), bucketisation becomes crucial to avoid excessively high cardinality that would lead to groups of one, rendering analysis less meaningful.</li>
<li><strong>Data Distribution Awareness:</strong> The choice of buckets shouldn't be arbitrary. Instead, it should be informed by the data's statistical distribution. Examining percentiles, quartiles, or quintiles can help define meaningful bucket ranges.</li>
<li><strong>Impact on Compression and Flexibility:</strong> Bucketisation can improve data compression by reducing the number of unique values. However, it comes at the expense of flexibility, as pre-defined buckets may limit the types of analyses possible.</li>
<li><strong>Avoiding Arbitrary Buckets:</strong> The author cautions against arbitrarily choosing bucket ranges without considering the underlying data distribution, as it can lead to misleading analyses and weaken the credibility of the derived insights.</li>
<li><strong>Stakeholder Involvement:</strong> When defining buckets for dimensions that could impact business decisions, it's crucial to involve relevant stakeholders to ensure alignment and minimise the need for future changes, which can be costly and time-consuming.</li>
</ul>
<p>Zach also provides examples where bucketisation plays a significant role:</p>
<ul>
<li><strong>Facebook's "Dim is active":</strong> While not explicitly bucketised, this dimension demonstrates the aggregation of user actions (facts) into a broader category. A more refined approach could involve bucketising users into activity levels (e.g., low, medium, high) based on their engagement metrics.</li>
<li><strong>Airbnb superhosts:</strong> Determining superhost status involves evaluating multiple criteria and potentially bucketising hosts based on their performance across these dimensions. This illustrates how bucketisation can create a meaningful dimension that reflects a collection of behaviours.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="properties-of-fact-and-dimension-tables">Properties of Fact and Dimension tables<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-vs-dimension#properties-of-fact-and-dimension-tables" class="hash-link" aria-label="Direct link to Properties of Fact and Dimension tables" title="Direct link to Properties of Fact and Dimension tables">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="dimensions">Dimensions<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-vs-dimension#dimensions" class="hash-link" aria-label="Direct link to Dimensions" title="Direct link to Dimensions">​</a></h3>
<ul>
<li>Usually show up in <code>GROUP BY</code> clause when doing analytics.</li>
<li>Can be "high cardinality" (e.g., user_id) or "low cardinality" (e.g., region).</li>
<li>Generally come from a snapshot of state.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="facts">Facts<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-vs-dimension#facts" class="hash-link" aria-label="Direct link to Facts" title="Direct link to Facts">​</a></h3>
<ul>
<li>Usually aggregated (e.g., SUM, COUNT, AVG) in analytics.</li>
<li>Almost always higher volume that dimensions, although some fact sources are low-volume, think "rare events".</li>
<li>Generally are events and logs.</li>
</ul>
<p>I hope you enjoyed reading this blog on Facts vs Dimensions. If you have any questions or feedback, feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>data-engineering</category>
            <category>fact-dimensional-modeling</category>
            <category>data-engineering-bootcamp</category>
        </item>
        <item>
            <title><![CDATA[Data Modelling - Fact Modelling]]></title>
            <link>https://buildwithvibs.in/blog/de-bootcamp-fact-modelling</link>
            <guid>https://buildwithvibs.in/blog/de-bootcamp-fact-modelling</guid>
            <pubDate>Sat, 14 Dec 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Im sharing my learning from the Data Engineering Bootcamp, where we are learning about Data Engeering.]]></description>
            <content:encoded><![CDATA[<p>Im sharing my learning from the Data Engineering Bootcamp, where we are learning about Data Engeering.
Today we are learning about Fact Modelling.</p>
<p>I would like to extend my gratitude to Zach Wilson, the founder of <a href="https://bootcamp.techcreator.io/lessons" target="_blank" rel="noopener noreferrer">DataExpert.io</a>, for his invaluable guidance and the comprehensive Data Engineering Bootcamp.
Connect with Zach Wilson on <a href="https://www.linkedin.com/in/eczachly/" target="_blank" rel="noopener noreferrer">LinkedIn</a>.</p>
<p>Thank you, Zach, for this amazing intense bootcamp on Data engineering!</p>
<hr>
<p>Week-2, Day-1: Fact Data Modeling</p>
<div class="theme-admonition theme-admonition-caution admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>caution</div><div class="admonitionContent_BuS1"><p>Fact data is the biggest data you work as data engineer. Zach shares, he worked 2PB of data in a day at Netflix !!</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="fact-data-modelling">Fact Data Modelling<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-modelling#fact-data-modelling" class="hash-link" aria-label="Direct link to Fact Data Modelling" title="Direct link to Fact Data Modelling">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-fact">What is a fact?<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-modelling#what-is-a-fact" class="hash-link" aria-label="Direct link to What is a fact?" title="Direct link to What is a fact?">​</a></h3>
<p>Fact can be thought as a record of an event that happened or occured.</p>
<ul>
<li>A user logs in to an app ( an action )</li>
<li>A transaction is made</li>
<li>You run a mile with your smartwatch - ( a mile can be a aggregated, considering each step in that mile as a granular)</li>
</ul>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Fact cannot be broken down further. It is the most granular data you have. ( this is way you think about fact )</p></div></div>
<p><span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">Facts are not slowly changing</span>, which makes them easier to model than dimensions.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="hardest-part-of-modelling-facts">Hardest part of modelling facts<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-modelling#hardest-part-of-modelling-facts" class="hash-link" aria-label="Direct link to Hardest part of modelling facts" title="Direct link to Hardest part of modelling facts">​</a></h3>
<ul>
<li>Fact data is usually 10-100x bigger than dimension data.</li>
<li>Fact data can need a lot of context for effective analysis like which dimension is it related to etc.</li>
<li>Facts would have duplicate data which is way more common than dimensions.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-does-fact-data-work">How does fact data work?<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-modelling#how-does-fact-data-work" class="hash-link" aria-label="Direct link to How does fact data work?" title="Direct link to How does fact data work?">​</a></h3>
<ul>
<li>Normalized facts dont have any dimesnional attributes, just IDs to join to get that information.</li>
<li>Denormalized facts bring in some dimension attributes to make it quicket analysis at the cost of storage.</li>
</ul>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Normalised facts works well for a small scale, you would remove the duplicate facts and data integrity is achieved.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-does-fact-modelling-work">How does fact modelling work?<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-modelling#how-does-fact-modelling-work" class="hash-link" aria-label="Direct link to How does fact modelling work?" title="Direct link to How does fact modelling work?">​</a></h3>
<p>Here’s a concise table highlighting the differences between <strong>fact data</strong> and <strong>raw log data</strong>, as described in the slide:</p>
<table><thead><tr><th><strong>Aspect</strong></th><th><strong>Raw Logs</strong></th><th><strong>Fact Data</strong></th></tr></thead><tbody><tr><td><strong>Schema Design</strong></td><td>Ugly schemas designed for online systems, making data analysis difficult.</td><td>Well-structured with nice column names.</td></tr><tr><td><strong>Data Quality</strong></td><td>May contain duplicates and other quality issues.</td><td>Includes quality guarantees like uniqueness, non-null constraints, etc.</td></tr><tr><td><strong>Retention</strong></td><td>Usually has shorter retention.</td><td>Retained for longer periods.</td></tr></tbody></table>
<p>Though Fact data and Raw logs are dependent, they are not the same. Fact data is a subset of raw logs, and it is the data that is used for analysis.</p>
<p>Fact can be identified as <code>Who</code>, <code>What</code>, <code>When</code>, <code>Where</code>, <code>How</code> of the data.</p>
<ul>
<li>
<p><strong>Who</strong> - User ID ( user who did the action )</p>
</li>
<li>
<p><strong>Where</strong> - Location ID ( where the action happened ), most likely modeled out like who with "IDs" to join, but more likely to bring in dimensions.</p>
</li>
<li>
<p><strong>How</strong> - Similiar to where, "He used an iphone to make this click"</p>
</li>
<li>
<p><strong>When</strong> - Timestamp ( when the action happened ). fundamentally part of the nature of the fact.</p>
<ul>
<li>Mostly an "event_timestamp" field or "event_date" field. ( always to be not null )</li>
</ul>
</li>
<li>
<p><strong>What</strong> - The action that happened. ( what is the fact ) ( always to be not null )</p>
<ul>
<li>In notification world, it could be "notification_sent", "notification_delivered", "notification_clicked"</li>
</ul>
</li>
<li>
<p>Fact datasets should have quality guarantees like uniqueness, non-null constraints, etc.</p>
</li>
<li>
<p>Fact data &lt; raw logs</p>
</li>
<li>
<p>Fact data should parse out hard-to-understand columns.</p>
</li>
<li>
<p>Expected to have the simple data types, in some cases, there can be complex data types</p>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-logging-fit-into-fact-data">How logging fit into fact data?<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-modelling#how-logging-fit-into-fact-data" class="hash-link" aria-label="Direct link to How logging fit into fact data?" title="Direct link to How logging fit into fact data?">​</a></h3>
<ul>
<li>It brings in all the crtical context for your fact data</li>
<li>Do not log everything, log what you need</li>
<li>Logging should conform to values specified by the online teams, define the standard schema for logging<!-- -->
<ul>
<li>Thrift was used at Netflix and Airbnb</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="potential-options-when-working-with-high-volume-fact-data">Potential options when working with high volume fact data<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-modelling#potential-options-when-working-with-high-volume-fact-data" class="hash-link" aria-label="Direct link to Potential options when working with high volume fact data" title="Direct link to Potential options when working with high volume fact data">​</a></h3>
<ul>
<li>
<p><strong>Sampling</strong>: This involves analysing a subset of the data, which can be significantly faster and require less storage, especially for gauging trends or directionality. However, sampling is unsuitable for situations like security analysis, where capturing rare events is crucial.</p>
</li>
<li>
<p><strong>Bucketing</strong>: This involves dividing the data into smaller partitions based on a key, like user ID. Bucketing can speed up joins, especially when employing techniques like bucket joins or sorted merge bucket joins (SMB joins) that minimise or eliminate shuffle.</p>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="retention-of-fact-data">Retention of Fact Data<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-modelling#retention-of-fact-data" class="hash-link" aria-label="Direct link to Retention of Fact Data" title="Direct link to Retention of Fact Data">​</a></h3>
<ul>
<li>High volumes make fact data much more costly to store.</li>
<li>Any fact tables &lt; 10 TBs, Retention is not a big deal.<!-- -->
<ul>
<li>Anonymisation of facts usually happens after 60-90 days, the data would be moved to a new table the PII data would be removed.</li>
</ul>
</li>
<li>Fact tables &gt; 100 TBs, very short retention is common. (~ 14 days)</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="deduplication-of-fact-data">Deduplication of Fact Data<a href="https://buildwithvibs.in/blog/de-bootcamp-fact-modelling#deduplication-of-fact-data" class="hash-link" aria-label="Direct link to Deduplication of Fact Data" title="Direct link to Deduplication of Fact Data">​</a></h3>
<p>As duplicate records are much more common in fact datasets compared to dimensional data. These duplicates can arise from various sources, such as:</p>
<ul>
<li><strong>Data quality errors:</strong> Software bugs in logging systems can lead to duplicate entries every time an event occurs.</li>
<li><strong>Genuine duplicate actions:</strong> Users might perform the same action multiple times within a given timeframe, resulting in multiple legitimate entries that need to be accounted for without inflating metrics. For example, a user might click on a notification multiple times, or a step-tracking app might record multiple steps in quick succession.</li>
</ul>
<p><strong>Deduplication is crucial for accurate analysis</strong>, as failing to address duplicates can distort metrics like click-through rates or user engagement. For example, if duplicates aren't removed from notification click data, the click-through rate might appear artificially inflated.</p>
<p>The suggestion here is to consider the <strong>timeframe</strong> for deduplication.  While it's essential to remove duplicates within a specific period where they significantly impact analysis, duplicates occurring over a longer timeframe might be less critical. For instance, a user clicking on a notification a year after initially clicking on it might not be relevant for measuring short-term engagement.</p>
<p>Two approaches to efficiently handle deduplication for high-volume fact data:</p>
<ul>
<li><strong>Streaming:</strong>
<ul>
<li>This method processes data in real time, deduplicating records as they arrive.</li>
<li>Windowing matters in streaming, you need to have a window to deduplicate the data.</li>
<li>Entire day deduplication is not possible in streaming, because it needs to hold onto such a big window of memory.</li>
<li>Large number of duplicates happens within a short time of first event.</li>
<li><strong>Deduplication window</strong> - 15 minutes, a sweet spot</li>
</ul>
</li>
<li><strong>Microbatch processing:</strong>
<ul>
<li>This technique involves processing data in small batches, such as hourly, to deduplicate records within each batch and subsequently merge the deduplicated batches.</li>
<li>There is a specific microbatch deduplication pattern involving hourly aggregation followed by a series of full outer joins to merge deduplicated data from different hours.</li>
</ul>
</li>
</ul>
<p>The choice between streaming and microbatch processing depends on factors like latency requirements and the complexity of the deduplication logic.</p>
<p>I hope you enjoyed reading this blog on Fact Data Modelling. If you have any questions or feedback, feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>data-engineering</category>
            <category>fact-dimensional-modeling</category>
            <category>data-engineering-bootcamp</category>
        </item>
        <item>
            <title><![CDATA[Data Modelling - Graph Databases and Additve Dimensions]]></title>
            <link>https://buildwithvibs.in/blog/de-bootcamp-graph-databases</link>
            <guid>https://buildwithvibs.in/blog/de-bootcamp-graph-databases</guid>
            <pubDate>Thu, 05 Dec 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Im sharing my learning from the Data Engineering Bootcamp, where we are learning about Data Engeering.]]></description>
            <content:encoded><![CDATA[<p>Im sharing my learning from the Data Engineering Bootcamp, where we are learning about Data Engeering.
Today we are learning about Data Modelling - Graph Databases</p>
<p>I would like to extend my gratitude to Zach Wilson, the founder of <a href="https://bootcamp.techcreator.io/lessons" target="_blank" rel="noopener noreferrer">DataExpert.io</a>, for his invaluable guidance and the comprehensive Data Engineering Bootcamp.
Connect with Zach Wilson on <a href="https://www.linkedin.com/in/eczachly/" target="_blank" rel="noopener noreferrer">LinkedIn</a>.</p>
<p>Thank you, Zach, for this amazing intense bootcamp on Data engineering!</p>
<hr>
<p>Day - 3: Data Modeling: Graph Databases</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="additive-vs-non-additive-dimensions">Additive vs non-additive dimensions<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#additive-vs-non-additive-dimensions" class="hash-link" aria-label="Direct link to Additive vs non-additive dimensions" title="Direct link to Additive vs non-additive dimensions">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-makes-a-dimension-additive">What makes a dimension additive<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#what-makes-a-dimension-additive" class="hash-link" aria-label="Direct link to What makes a dimension additive" title="Direct link to What makes a dimension additive">​</a></h3>
<ul>
<li>
<p>A additive dimension is a dimension that can be summed up across all the dimensions in the fact table.
For Example: You manage a sales database that tracks daily transactions.
You want to analyze the <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">total revenue generated</span> by your business.
The Revenue measure is an additive dimension because it can be summed across all levels of the data (e.g., by day, month, region, product, etc.).</p>
</li>
<li>
<p>Non-additive dimensions are dimensions that cannot be summed up across all the dimensions in the fact table.
For Example: Application interface is not additive.
The number of active users != # of active users on web + # of active users on mobile (Android + iOS).</p>
<p>Why is this?
Overlapping Users: A single user can be active on multiple platforms (e.g., logging in on both web and mobile during the same time period). Simply summing active users across platforms would <code>double-count</code> those users.</p>
</li>
</ul>
<div class="theme-admonition theme-admonition-important admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>important</div><div class="admonitionContent_BuS1"><p>A deminsion is additive over a specific window of time, if and only if, the grain of data over that window can
only ever be one value at a time.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-additivity-help">How additivity help?<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#how-additivity-help" class="hash-link" aria-label="Direct link to How additivity help?" title="Direct link to How additivity help?">​</a></h3>
<ol>
<li>
<p><strong>No need for COUNT(DISTINCT)</strong>: When a measure is additive, you can aggregate it (e.g., SUM) across dimensions without needing a COUNT(DISTINCT) to avoid duplicates.</p>
</li>
<li>
<p><strong>Additivity Applies Mostly to SUM:</strong></p>
<ul>
<li>Non-additive dimensions (like active users) are usually problematic only when using <code>COUNT</code> because you might double-count. However, <strong>SUM</strong> aggregations typically remain additive.</li>
</ul>
</li>
</ol>
<div class="theme-admonition theme-admonition-note admonition_xJq3 alert alert--secondary"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"></path></svg></span>note</div><div class="admonitionContent_BuS1"><p>Can the dimension be 2 things at once? If yes, it's non-additive.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="all-about-enums">All about ENUMS<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#all-about-enums" class="hash-link" aria-label="Direct link to All about ENUMS" title="Direct link to All about ENUMS">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-an-enum-type">What is an ENUM type?<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#what-is-an-enum-type" class="hash-link" aria-label="Direct link to What is an ENUM type?" title="Direct link to What is an ENUM type?">​</a></h3>
<p>ENUM is a data type that contains a fixed set of values.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="when-should-you-use-enums">When should you use ENUMs?<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#when-should-you-use-enums" class="hash-link" aria-label="Direct link to When should you use ENUMs?" title="Direct link to When should you use ENUMs?">​</a></h3>
<ul>
<li>Enums are great for low-to-medium cardinality columns.</li>
<li>Country is a great example of where Enums start to struggle.</li>
</ul>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Enums are great if the set of value count is &lt; 50.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-use-enums">Why use ENUMs?<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#why-use-enums" class="hash-link" aria-label="Direct link to Why use ENUMs?" title="Direct link to Why use ENUMs?">​</a></h3>
<ul>
<li>Built in data quality:<!-- -->
<ul>
<li>IF you model a column as ENUM, you can be sure that the data in that column is one of the values in the ENUM. if the data is not in the ENUM, the pipeline will fail.</li>
</ul>
</li>
<li>Built in static fields:<!-- -->
<ul>
<li>If you have a column that is not going to change, you can use ENUMs.</li>
<li>Example: Employee Type (Full Time, Part Time, Contractor)</li>
</ul>
</li>
<li>Built in documentation:<!-- -->
<ul>
<li>You would know already what the values are, it is self documented.</li>
</ul>
</li>
</ul>
<p>In Postgres you can create ENUMs like this:</p>
<div class="language-sql codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sql codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">CREATE</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">TYPE</span><span class="token plain"> employee_type </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">AS</span><span class="token plain"> </span><span class="token keyword" style="color:rgb(189, 147, 249);font-style:italic">ENUM</span><span class="token plain"> </span><span class="token punctuation" style="color:rgb(248, 248, 242)">(</span><span class="token string" style="color:rgb(255, 121, 198)">'Full Time'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Part Time'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">,</span><span class="token plain"> </span><span class="token string" style="color:rgb(255, 121, 198)">'Contractor'</span><span class="token punctuation" style="color:rgb(248, 248, 242)">)</span><span class="token punctuation" style="color:rgb(248, 248, 242)">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="enumerations-and-sup-partitions">Enumerations and sup partitions<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#enumerations-and-sup-partitions" class="hash-link" aria-label="Direct link to Enumerations and sup partitions" title="Direct link to Enumerations and sup partitions">​</a></h3>
<ul>
<li>Enumerations make it easy to create sup partitions, because:<!-- -->
<ul>
<li>You can be sure that the data in the column is one of the values in the ENUM.</li>
<li>They chunk up the big data problem into manageable pieces.</li>
</ul>
</li>
</ul>
<p><strong>For example:</strong> Deduping the Notification channel (Email, SMS, Push) is defined as ENUM. You can process the data with date and notification channel in parallel.</p>
<ul>
<li>The <a href="https://github.com/EcZachly/little-book-of-pipelines/tree/master" target="_blank" rel="noopener noreferrer">little book of pipelines</a> by Zach:<!-- -->
<ul>
<li>The <strong>Little Book of Enums</strong> is a design pattern for organizing and managing complex data pipelines with multiple sources. It groups similar data sources together, defines a shared schema for consistency, and uses enums to document metadata, data quality rules, and constants for each group.</li>
<li>How is this little book generated?<!-- -->
<ul>
<li>The <strong>ENUMs</strong> are typically defined in Python or Scala to represent the metadata.</li>
<li>A dedicated job is used to convert the enumerated list into a table.</li>
<li>The resulting table is small, as it only contains as many entries as there are ENUMs.</li>
<li>This table can then be used to share metadata between data quality (DQ) checks (passed as a table) and source functions (passed as Python objects) by joining them as needed.</li>
</ul>
</li>
<li>What type of use cases is this ENUM pattern useful for?<!-- -->
<ul>
<li>Whenever you have many sources mapping to a shared schema.</li>
<li>Airbnb<!-- -->
<ul>
<li>Unit Economics (fees, coupons, credits, insurance, infrastructure cost, taxes etc)</li>
</ul>
</li>
</ul>
</li>
<li>How do you model data from disparate sources into a shared schema?<!-- -->
<ul>
<li>Flexible schema: Using map</li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="flexible-schema">Flexible schema<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#flexible-schema" class="hash-link" aria-label="Direct link to Flexible schema" title="Direct link to Flexible schema">​</a></h3>
<ul>
<li>Benefits<!-- -->
<ul>
<li>No need to run ALTER TABLE each time a new column is added.</li>
<li>Easier management of numerous columns.</li>
<li>Schemas are not cluttered with many "NULL" columns.</li>
<li>"Other_properties" columns are excellent for "rarely-used-but-needed" data.</li>
</ul>
</li>
<li>Drawbacks<!-- -->
<ul>
<li>Typically results in poorer compression.</li>
<li>Can affect readability and queryability.</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="graph-data-modeling">Graph data modeling<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#graph-data-modeling" class="hash-link" aria-label="Direct link to Graph data modeling" title="Direct link to Graph data modeling">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-graph-database">What is a graph database?<a href="https://buildwithvibs.in/blog/de-bootcamp-graph-databases#what-is-a-graph-database" class="hash-link" aria-label="Direct link to What is a graph database?" title="Direct link to What is a graph database?">​</a></h3>
<p>Graph databases are a type of NoSQL database that uses graph structures for semantic queries with nodes, edges, and properties to represent and store data.</p>
<p>Graph modelling is RELATIONSHIP focused, not entity focused. There would be chances of poor job at modelling the entities.</p>
<p>Usually the model look like this for entities(vertices):</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">- Identifier: STRING</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- Type: STRING</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- Properties: MAP&lt;STRING,STRING&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><p>We dont care about the entities, we care about the relationships.</p></div></div>
<p>The schema for edges would look like this:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#F8F8F2;--prism-background-color:#282A36"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#F8F8F2;background-color:#282A36"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#F8F8F2"><span class="token plain">- subject_identifier: STRING</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- subject_type: VertexType</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- object_identifier: STRING</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- object_type: VertexType</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- edge_type: EdgeType (always a verb: is_a, place_with, has_a etc)</span><br></span><span class="token-line" style="color:#F8F8F2"><span class="token plain">- Properties: MAP&lt;STRING,STRING&gt;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>I hope you enjoyed reading this blog on Graph Data Modelling. If you have any questions or feedback, feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>data-engineering</category>
            <category>dimensional-modeling</category>
            <category>data-engineering-bootcamp</category>
            <category>graph-database</category>
        </item>
        <item>
            <title><![CDATA[Dimensional Modelling - SCD]]></title>
            <link>https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd</link>
            <guid>https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd</guid>
            <pubDate>Sun, 01 Dec 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Im sharing my learning from the Data Engineering Bootcamp, where we are learning about Data Engeering. Today we are learning about Dimensional modelling - Idempotency and SCDs.]]></description>
            <content:encoded><![CDATA[<p>Im sharing my learning from the Data Engineering Bootcamp, where we are learning about Data Engeering. Today we are learning about Dimensional modelling - Idempotency and SCDs.</p>
<p>I would like to extend my gratitude to Zach Wilson, the founder of <a href="https://bootcamp.techcreator.io/lessons" target="_blank" rel="noopener noreferrer">DataExpert.io</a>, for his invaluable guidance and the comprehensive Data Engineering Bootcamp.
Connect with Zach Wilson on <a href="https://www.linkedin.com/in/eczachly/" target="_blank" rel="noopener noreferrer">LinkedIn</a>.</p>
<p>Thank you, Zach, for this amazing intense bootcamp on Data engineering!</p>
<hr>
<p>Day-2: Dimensional Modelling - Slowly Changing Dimensions (Theory)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-an-idempotent-pipeline">What is an Idempotent Pipeline?<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#what-is-an-idempotent-pipeline" class="hash-link" aria-label="Direct link to What is an Idempotent Pipeline?" title="Direct link to What is an Idempotent Pipeline?">​</a></h2>
<blockquote>
<p>Idempotency: An idempotent pipeline ensures that processing the same data multiple times (whether it's live production data or backfill data) yields the same result without any unintended side effects. This consistency is crucial for reliability and simplicity in data workflows.</p>
</blockquote>
<p>Pipelines should produce the same results:</p>
<ol>
<li>The day they are run</li>
<li>How many times they are run</li>
<li>What hour they are run</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-is-hard-to-troubleshoot-non-idempotent-pipelines">Why is hard to troubleshoot non-idempotent pipelines?<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#why-is-hard-to-troubleshoot-non-idempotent-pipelines" class="hash-link" aria-label="Direct link to Why is hard to troubleshoot non-idempotent pipelines?" title="Direct link to Why is hard to troubleshoot non-idempotent pipelines?">​</a></h3>
<ol>
<li>Silent Failure: The non-idempotent pipelines can produce different results every time they are run, it doesnt fail. This results in <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">non reproduceable results</span>.</li>
<li>This causes inconsistency in the data to the downstream systems too.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-can-make-a-pipline-non-idempotent">What can make a pipline non-idempotent?<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#what-can-make-a-pipline-non-idempotent" class="hash-link" aria-label="Direct link to What can make a pipline non-idempotent?" title="Direct link to What can make a pipline non-idempotent?">​</a></h3>
<ol>
<li><code>INSERT INTO</code> without <code>TRUNCATE</code>:<!-- -->
<ol>
<li>If you dont <code>TRUNCATE</code> data before INSERT, it will keep on adding the data to the table, creating duplicates.</li>
<li>Thus your pipeline will not be idempotent, as it will keep on adding the data to the table.</li>
<li>Highly recommended to use <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">MERGE</span> or <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">INSERT OVERWRITE</span> always.</li>
</ol>
</li>
<li>Using <code>start_date &gt;</code> without a corresponding <code>end_date &lt;</code>:<!-- -->
<ol>
<li>If you dont have <code>end_date</code> in your SCD, you will not be able to track the changes in the data.</li>
<li>This can create a out of memory exceptions, when you backfill the data.</li>
<li>Highly recommended to use <span style="background-color:#3e6980;border-radius:2px;color:#fff;padding:0.2rem">end_date</span> in your SCD always.</li>
</ol>
</li>
<li>Not using a full set of partition sensors:<!-- -->
<ol>
<li>Your pipeline may run with partial set of inputs.</li>
<li>pipeline might run when there is no/partial data</li>
</ol>
</li>
<li>Not using <code>depends_on_past</code> for cumulative pipelines:<!-- -->
<ol>
<li>When you process the data in parallel ( lets say processing parallel days ), pipeline may end up processing yesterday's data, which hasnt been created yet.</li>
</ol>
</li>
</ol>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>The beauty of an idempotent pipeline lies in its ability to produce consistent results for both production and backfill data.</p></div></div>
<p><strong>Example:</strong>
Imagine a pipeline that:</p>
<ol>
<li>Reads data (e.g., transactions).</li>
<li>Cleans and deduplicates it.</li>
<li>Stores the cleaned data in a database.</li>
</ol>
<ul>
<li><strong>Production:</strong> As new transactions come in, they’re cleaned, deduplicated, and stored.</li>
<li><strong>Backfill:</strong> When historical transactions are added, they go through the same cleaning and deduplication process, ensuring no duplicate records and consistent results.</li>
</ul>
<p>Because the pipeline is idempotent:</p>
<ul>
<li>Processing the same data again won’t alter the results or create issues.</li>
<li>Whether it's production or backfill data, the behavior remains identical.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="few-more-problems-that-can-make-a-pipeline-non-idempotent">Few more problems that can make a pipeline non-idempotent<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#few-more-problems-that-can-make-a-pipeline-non-idempotent" class="hash-link" aria-label="Direct link to Few more problems that can make a pipeline non-idempotent" title="Direct link to Few more problems that can make a pipeline non-idempotent">​</a></h3>
<ol>
<li>Relying on the <strong>latest</strong> partition of a not properly modeled SCD table.<!-- -->
<ul>
<li>Cumulative table design AMPLIFIES this bug.</li>
</ul>
</li>
<li>One exception relying on latest partition is when you have properly modeled SCD table and <span style="background-color:#3e8045;border-radius:2px;color:#fff;padding:0.2rem">you are backfilling not in production</span>.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-pains-of-not-having-an-idempotent-pipeline">The pains of not having an idempotent pipeline<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#the-pains-of-not-having-an-idempotent-pipeline" class="hash-link" aria-label="Direct link to The pains of not having an idempotent pipeline" title="Direct link to The pains of not having an idempotent pipeline">​</a></h3>
<ul>
<li>Backfilling causes inconsistencies between the old and restated data.</li>
<li>Hard to troubleshoot bugs and fix the issues.</li>
<li>Unit testing cannot replicate the production behavior.</li>
<li>The pipeline doesnt fail, but the data is inconsistent, which is silent failures.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="slowly-changing-dimensions-scd">Slowly Changing Dimensions (SCD)<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#slowly-changing-dimensions-scd" class="hash-link" aria-label="Direct link to Slowly Changing Dimensions (SCD)" title="Direct link to Slowly Changing Dimensions (SCD)">​</a></h2>
<p>The Slowly Changing Dimensions (SCD) are dimensions that change slowly over time, which would have time frame with them. For example,</p>
<ol>
<li>Customer Address</li>
<li>Product Description</li>
<li>Employee Details</li>
<li>etc.</li>
</ol>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><p>Not modelling the SCDs properly can impact the idempotency.</p></div></div>
<div class="theme-admonition theme-admonition-tip admonition_xJq3 alert alert--success"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 12 16"><path fill-rule="evenodd" d="M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"></path></svg></span>tip</div><div class="admonitionContent_BuS1"><p>The slower the changes in a Slowly Changing Dimension (SCD), the more effectively it can be modeled.</p></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-can-you-model-dimensions-that-change-over-time">How can you model dimensions that change over time?<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#how-can-you-model-dimensions-that-change-over-time" class="hash-link" aria-label="Direct link to How can you model dimensions that change over time?" title="Direct link to How can you model dimensions that change over time?">​</a></h3>
<ul>
<li>Singular snapshot: The dimension table only contains the most recent data.<!-- -->
<ul>
<li>Be Careful: This pipelines are not idempotent.</li>
</ul>
</li>
<li>Daily partitioned snapshots: The dimension table contains a snapshot of the data for each day.<!-- -->
<ul>
<li>Very simple way of implementing SCD.</li>
</ul>
</li>
<li>SCD Types 1,2,3</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="types-of-slowly-changing-dimensions">Types of Slowly Changing Dimensions<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#types-of-slowly-changing-dimensions" class="hash-link" aria-label="Direct link to Types of Slowly Changing Dimensions" title="Direct link to Types of Slowly Changing Dimensions">​</a></h3>
<p>Here’s a Markdown table summarizing the content provided:</p>
<table><thead><tr><th><strong>Type</strong></th><th><strong>Description</strong></th><th><strong>Key Features</strong></th><th><strong>Limitations</strong></th></tr></thead><tbody><tr><td><strong>Type 0</strong></td><td>Static dimensions, not actually slowly changing.</td><td>- No temporal columns. <br> - Table contains only identifier and value.</td><td>- No changes tracked or maintained.</td></tr><tr><td><strong>Type 1</strong></td><td>Overwrites old data with new data, only latest data is retained.</td><td>- Simple and efficient. <br> - No history maintained.</td><td>- Cannot retrieve historical data.</td></tr><tr><td><strong>Type 2</strong></td><td>Gold standard of Slowly Changing Dimensions, maintains history using temporal columns.</td><td>- Uses <code>start_date</code> and <code>end_date</code>. <br> - Current rows have <code>end_date = NULL</code> or <code>9999-12-31</code>. <br> - Optionally uses <code>is_current</code> column.</td><td>- More than one row per dimension can complicate filtering and querying.</td></tr><tr><td><strong>Type 3</strong></td><td>Maintains only two versions of the data: <code>original</code> and <code>current</code>.</td><td>- One row per dimension.</td><td>- Loses history of changes between <code>original</code> and <code>current</code>. <br> - Partially idempotent.</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="which-types-are-idempotent">Which types are idempotent?<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#which-types-are-idempotent" class="hash-link" aria-label="Direct link to Which types are idempotent?" title="Direct link to Which types are idempotent?">​</a></h3>
<table><thead><tr><th>Type</th><th>Idempotent</th><th>Reason</th></tr></thead><tbody><tr><td>Type 0</td><td>Yes</td><td>The values are unchanging.</td></tr><tr><td>Type 2</td><td>Yes</td><td>It is idempotent, but you need to be careful with how you use the <code>start_date</code> and <code>end_date</code>.</td></tr><tr><td>Type 1</td><td>No</td><td>Backfilling with this dataset gives the dimension as it is now, not as it was before.</td></tr><tr><td>Type 3</td><td>No</td><td>Backfilling makes it impossible to determine whether to pick "original" or "current."</td></tr></tbody></table>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="loading-scd2">Loading SCD2<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling-scd#loading-scd2" class="hash-link" aria-label="Direct link to Loading SCD2" title="Direct link to Loading SCD2">​</a></h3>
<ul>
<li>Load the entire history in one query<!-- -->
<ul>
<li>Inefficient but nimble</li>
</ul>
</li>
<li>Incremnetally load the data after the previoud SCD is generated<!-- -->
<ul>
<li>Has the same <code>depends_on_past</code>. its efficient but cumbersome.</li>
</ul>
</li>
</ul>
<p>I hope you enjoyed reading this blog on Slowly Changing Dimensions. If you have any questions or feedback, feel free to reach out to me on </p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><p></p>]]></content:encoded>
            <category>data-engineering</category>
            <category>dimensional-modeling</category>
            <category>data-engineering-bootcamp</category>
            <category>slowly-changing-dimension</category>
        </item>
        <item>
            <title><![CDATA[Dimensional Modelling - Cumulative Table]]></title>
            <link>https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling</link>
            <guid>https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling</guid>
            <pubDate>Fri, 29 Nov 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[This page is about Dimensional Modelling - Cumulative Table.]]></description>
            <content:encoded><![CDATA[<p>Im sharing my learning from the Data Engineering Bootcamp, where we are learning about Data Engeering. Today we are learning about Dimensional modelling - Cumulative Table.</p>
<p>I would like to extend my gratitude to Zach Wilson, the founder of <a href="https://bootcamp.techcreator.io/lessons" target="_blank" rel="noopener noreferrer">DataExpert.io</a>, for his invaluable guidance and the comprehensive Data Engineering Bootcamp.
Connect with Zach Wilson on <a href="https://www.linkedin.com/in/eczachly/" target="_blank" rel="noopener noreferrer">LinkedIn</a>.</p>
<p>Thank you, Zach, for this amazing intense bootcamp on Data engineering!</p>
<hr>
<p>Day-1: Dimensional Modelling (Theory)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-a-dimension">What is a Dimension?<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#what-is-a-dimension" class="hash-link" aria-label="Direct link to What is a Dimension?" title="Direct link to What is a Dimension?">​</a></h2>
<p>Dimension are <code>attributes</code> of an entity ( example: user's name, age etc)</p>
<ul>
<li>Dimensions may be <code>IDENTIFY</code> an entity, which would be a unique identifier for the entity (example: user_id, device_id etc)</li>
<li>Dimensions may be <code>DESCRIPTIVE</code> which would be the attributes of the entity (example: user's name,age etc) but wont be unique.</li>
</ul>
<p>Dimensions comes in two flavors:</p>
<ul>
<li><code>Slowly Changing Dimensions</code> : Dimensions that change over time like user's address, phone number etc. This attribute is time dependent. Can be painful deal with these attributes.</li>
<li><code>Fixed</code>: Dimensions that do not change over time like user's birthdate. These are easy to deal with.</li>
</ul>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Knowing whether the attributes are slowly changing or fixed is important to design the data model.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="knowing-your-data-consumer">Knowing your data consumer<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#knowing-your-data-consumer" class="hash-link" aria-label="Direct link to Knowing your data consumer" title="Direct link to Knowing your data consumer">​</a></h2>
<p><code>Who is using your data?</code> is the most important question to ask before designing the data model. The data model should be designed in such a way that it is easy for the data consumer to understand the data.</p>
<p>Whether the data is getting delivered to:</p>
<ol>
<li>Data Analyst / Data Scientist:<!-- -->
<ul>
<li>They would be interested in the data that is <code>easy to understand and analyze</code>.</li>
<li>They wouldnt be interested in dealing with <code>complex data types</code> like JSON, XML etc.</li>
</ul>
</li>
<li>Data Engineers:<!-- -->
<ul>
<li>Sometimes downstream systems would be handled by Data Engineers, to take your data sets and join with other data to achieve the buisness logic, so the data model be compact and probably harder to query.</li>
<li>Nested types are fine to model the data.</li>
<li>Usually, as we get further up in ladder of data engineering, there would be <code>Master Data</code> which would be used by other data engineers or teams, to join the master data with other data sets.</li>
</ul>
</li>
<li>ML models:<!-- -->
<ul>
<li>Generally machine learning models would need <code>identifier</code> and bunch of flattened decimal columns like <code>feature value columns</code> etc.</li>
<li>Sometimes it depends on the model, the model can sometime handle the complex data structures, similiar to what Data analyst and data scientist would need.</li>
</ul>
</li>
<li>Customers<!-- -->
<ul>
<li>You would never give the data directly ( like JSON, CSVs etc) to the customers, you would always give them the <code>dashboards</code> or <code>reports</code> which would be easy to understand and analyze.</li>
</ul>
</li>
</ol>
<blockquote>
<p>Not knowing your data consumer, there is a high chance that the data model would be designed in a wrong way, can lead to business loss.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="oltp-vs-olap-vs-master-data">OLTP Vs OLAP Vs Master Data<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#oltp-vs-olap-vs-master-data" class="hash-link" aria-label="Direct link to OLTP Vs OLAP Vs Master Data" title="Direct link to OLTP Vs OLAP Vs Master Data">​</a></h2>
<ol>
<li>OLTP(Online Transaction Processing):<!-- -->
<ul>
<li>OLTP is the system that is used to record the transactions that are happening in the system.</li>
<li>The data model is optimized for <code>low latency</code> and <code>low-volume</code> queries, usually dealing with <code>single record</code> at a time.</li>
<li>Usually Software Engineers model the data in OLTP.</li>
<li>The data model in OLTP is <code>3NF</code> (Third Normal Form) which means the data is broken down into multiple tables and the data is not repeated.</li>
<li>Databases: MySQL, Postgres etc.</li>
</ul>
</li>
<li>OLAP(Online Analytical Processing):<!-- -->
<ul>
<li>OLAP is the system that is used to analyze the data that is stored in the OLTP system.</li>
<li>The data model is optimized for <code>high volume</code> and <code>complex queries</code>, using <code>aggregations</code> and <code>joins</code>.</li>
<li>Usually <code>Data Engineers</code> model the data in OLAP.</li>
<li>Analytical Databases: Redshift, BigQuery etc.</li>
</ul>
</li>
<li>Master Data:<!-- -->
<ul>
<li>Master Data is optimied for completeness of entity definition and deduped.</li>
<li>Master Data is usually a middle layer between OLTP and OLAP.</li>
</ul>
</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="impacts-of-mismatched-data-model">Impacts of Mismatched Data Model<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#impacts-of-mismatched-data-model" class="hash-link" aria-label="Direct link to Impacts of Mismatched Data Model" title="Direct link to Impacts of Mismatched Data Model">​</a></h2>
<div class="theme-admonition theme-admonition-info admonition_xJq3 alert alert--info"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 14 16"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"></path></svg></span>info</div><div class="admonitionContent_BuS1"><p>Mismatching needs of the data consumer == Less business value</p></div></div>
<ul>
<li>When you model transaction system as analytical system, like transactional system usually need only one record at a time, but if you model it as analytical system, you would retrieve all the unnecessary data which would be a performance hit.</li>
<li>When you model analytical system as transactional system, like analytical system usually need to aggregate the data, but if you model it as transactional system, you would have to do the aggregation/joins on the fly which would be a performance hit.</li>
<li>Having the Master Data as middle layer, would give you the flexibility whichever data model you want to use.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="oltp-and-olap-is-a-continuum">OLTP and OLAP is a continuum<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#oltp-and-olap-is-a-continuum" class="hash-link" aria-label="Direct link to OLTP and OLAP is a continuum" title="Direct link to OLTP and OLAP is a continuum">​</a></h2>
<p><img decoding="async" loading="lazy" alt="data-flow" src="https://buildwithvibs.in/assets/images/data-flow-0daf58888b976755903f9cf43700ae92.png" width="575" height="171" class="img_ev3q"></p>
<ul>
<li><code>Production Database Snapshot</code>: Usually the data in Production databases are transactional data, which is used to record the transactions that are happening in the system/web application/mobile application etc.</li>
<li><code>Master Data</code>: Taking the production datasets and creating the master data, for easy to understanding. Instead of querying "many" transactional databases, merging them into master data would be much efficient.</li>
<li><code>OLAP Cubes</code>:<!-- -->
<ul>
<li>You would flatten the data, like you might have multiple rows per entity, where you can aggregate the data.</li>
<li>OLAP Cubes space is also create the slice and dice the data.</li>
</ul>
</li>
<li><code>Metrics</code>: You would aggregate even further to get the one number which would be like <code>KPIs</code> of the business.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="cumulative-table-design">Cumulative Table Design<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#cumulative-table-design" class="hash-link" aria-label="Direct link to Cumulative Table Design" title="Direct link to Cumulative Table Design">​</a></h2>
<ul>
<li>Some days not every user would be active, but still master data should hold the details of the user.</li>
<li>Cumulative table is the table that holds the <code>history of the data</code>.</li>
</ul>
<p><em>The way cumulative table is designed is</em>:</p>
<ul>
<li>You would have 2 datasets like <code>today</code> and <code>yesterday</code>.</li>
<li><code>Full Outer Join</code> is done on the datasets, to get all the data, pulling the history data every day.</li>
<li><code>Coalesce</code> is used to get the latest data.</li>
</ul>
<p><em>Where is it used?</em></p>
<ul>
<li><code>Growth Analysis</code>: To see how the data is growing over time.</li>
<li><code>State transition tracking</code>: To see how the data is changing over time.</li>
</ul>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><ul>
<li>Cumulative table gets bigger and bigger over time, so applying the filtering on the data is important.</li>
</ul></div></div>
<p><em>Cumulative Table: Strengths and Drawbacks</em></p>
<table><thead><tr><th><strong>Category</strong></th><th><strong>Strengths</strong></th><th><strong>Drawbacks</strong></th></tr></thead><tbody><tr><td><strong>Analytics</strong></td><td>- Enables historical analysis without shuffling or reprocessing the data.</td><td>- Sequential backfilling can limit flexibility when correcting or reprocessing older data.</td></tr><tr><td><strong>Tracking</strong></td><td>- Easy to track changes and transitions over time.</td><td>- Incremental growth of data size over time, leading to storage and performance challenges.</td></tr><tr><td><strong>Data</strong></td><td>- Provides a complete snapshot of trends and transitions.</td><td>- Retains potentially outdated or deleted PII data, complicating compliance with data privacy laws.</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-compactness-vs-usability-tradeoff">The compactness vs usability tradeoff<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#the-compactness-vs-usability-tradeoff" class="hash-link" aria-label="Direct link to The compactness vs usability tradeoff" title="Direct link to The compactness vs usability tradeoff">​</a></h2>
<ul>
<li>
<p>The most usable tables usually are</p>
<ul>
<li>They are straightforward, they would have identifier for dimensional model.</li>
<li>Have no complex data types.</li>
<li>Easily can be manipulated with <code>WHERE</code> and <code>GROUP BY</code> clauses.</li>
</ul>
</li>
<li>
<p>The most compact tables usually are</p>
<ul>
<li>Are compressed to be as small as possible, which would be harder to query directly until they're decoded.</li>
</ul>
</li>
<li>
<p>The middle-ground table:</p>
<ul>
<li>Where you would use complex data types (e.g. ARRAY, STRUCT, MAP) to model the data, which would be harder to query directly but can be used to join with other data sets.</li>
</ul>
</li>
</ul>
<p><em>When would you each type of table?</em></p>
<ul>
<li>Most compact:<!-- -->
<ul>
<li>Online systems where latency and data volume are critical.</li>
<li>Consumers are usually hihgly technical and can handle complex data types.</li>
</ul>
</li>
<li>Most usable:<!-- -->
<ul>
<li>When analytics is the main consumer</li>
<li>The majority of the consumer are less technical and need the data to be easy to understand and analyze.</li>
</ul>
</li>
<li>Middle-ground:<!-- -->
<ul>
<li>Upstream staging/master data are used by majority of consumers who are other data engineers.</li>
</ul>
</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="struct-vs-array-vs-map">Struct Vs Array Vs Map<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#struct-vs-array-vs-map" class="hash-link" aria-label="Direct link to Struct Vs Array Vs Map" title="Direct link to Struct Vs Array Vs Map">​</a></h2>
<table><thead><tr><th><strong>Feature</strong></th><th><strong>Struct</strong></th><th><strong>Map</strong></th><th><strong>Array</strong></th></tr></thead><tbody><tr><td><strong>Definition</strong></td><td>A table within a table.</td><td>A key-value pair structure.</td><td>A list of values.</td></tr><tr><td><strong>Keys</strong></td><td>Rigidly defined, improving compression.</td><td>Flexible, less compression efficiency.</td><td>Not applicable (index-based).</td></tr><tr><td><strong>Values</strong></td><td>Can be of any type.</td><td>Must all be of the same type.</td><td>Must all be of the same type.</td></tr><tr><td><strong>Usage</strong></td><td>Suitable for structured data with predefined keys.</td><td>Best for flexible key-value relationships.</td><td>Ideal for ordered collections of data.</td></tr><tr><td><strong>Complexity</strong></td><td>Higher due to nested structure.</td><td>Simpler, dynamic key-value management.</td><td>Simplest among the three; index-based access.</td></tr><tr><td><strong>Nesting</strong></td><td>Supports nesting within itself or arrays.</td><td>Can be nested inside structs or arrays.</td><td>Can contain structs or maps as elements.</td></tr></tbody></table>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="impact-of-adding-a-temporal-time-based-dimension">Impact of adding a temporal (time-based) dimension<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#impact-of-adding-a-temporal-time-based-dimension" class="hash-link" aria-label="Direct link to Impact of adding a temporal (time-based) dimension" title="Direct link to Impact of adding a temporal (time-based) dimension">​</a></h2>
<ol>
<li>
<p><strong>Cardinality Explosion</strong>:</p>
<ul>
<li>Adding a time dimension (e.g., days, nights, or timestamps) increases the number of unique combinations in the dataset. This often grows by at least <strong>one order of magnitude</strong> (10x or more).</li>
<li>Example: Airbnb has ~6 million listings. If we want to track the nightly availability and pricing for each listing for a year, it results in:<!-- -->
<ul>
<li><strong>365 days × 6 million listings = ~2 billion rows</strong> of data.</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>Challenges with Dataset Design</strong>:</p>
<ul>
<li><strong>Option 1</strong>: You could store this data as a single listing with an array (list) of 365 nights. This approach is compact but may be harder to query efficiently.</li>
<li><strong>Option 2</strong>: Alternatively, store it as 2 billion rows, where each row represents one listing-night combination. While this structure is easier to query, it increases the dataset size significantly.</li>
</ul>
</li>
<li>
<p><strong>Using the Parquet</strong>:</p>
<ul>
<li>Using efficient file formats like <strong>Parquet</strong>, which compresses data well, helps to reduce the size of both approaches. With proper sorting and organization, you can minimize storage overhead.</li>
</ul>
</li>
</ol>
<div class="theme-admonition theme-admonition-warning admonition_xJq3 alert alert--warning"><div class="admonitionHeading_Gvgb"><span class="admonitionIcon_Rf37"><svg viewBox="0 0 16 16"><path fill-rule="evenodd" d="M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"></path></svg></span>warning</div><div class="admonitionContent_BuS1"><p>Badness of denormolized temporal dimension: if you have to join the data with other dimensions, spark shuffle will ruin the compression.</p></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="run-length-encoding-compression">Run length encoding compression<a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#run-length-encoding-compression" class="hash-link" aria-label="Direct link to Run length encoding compression" title="Direct link to Run length encoding compression">​</a></h2>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Run-length_encoding" target="_blank" rel="noopener noreferrer">Run length encoding</a>  is a form of lossless data compression in which runs of data (consecutive occurrences of the same data value) are stored as a single occurrence of that data value and a count of its consecutive occurrences, rather than as the original run. <sup>[1]</sup></li>
<li>RLE is one of reasons why Parquet is so efficient for storing data.</li>
<li>However, <strong>shuffle can ruin this efficiency</strong>. Since shuffle happens in a distributed environment during JOIN and GROUP BY operations, data is redistributed across nodes, and compression benefits like RLE are often lost.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="i-hope-you-enjoyed-reading-this-blog-on-dimensional-modelling-if-you-have-any-questions-or-feedback-feel-free-to-reach-out-to-me-on-">I hope you enjoyed reading this blog on Dimensional Modelling. If you have any questions or feedback, feel free to reach out to me on <div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div><a href="https://buildwithvibs.in/blog/de-bootcamp-dimensional-modelling#i-hope-you-enjoyed-reading-this-blog-on-dimensional-modelling-if-you-have-any-questions-or-feedback-feel-free-to-reach-out-to-me-on-" class="hash-link" aria-label="Direct link to i-hope-you-enjoyed-reading-this-blog-on-dimensional-modelling-if-you-have-any-questions-or-feedback-feel-free-to-reach-out-to-me-on-" title="Direct link to i-hope-you-enjoyed-reading-this-blog-on-dimensional-modelling-if-you-have-any-questions-or-feedback-feel-free-to-reach-out-to-me-on-">​</a></h2>
<p>[1]: source from wikipedia</p>]]></content:encoded>
            <category>data-engineering</category>
            <category>dimensional-modeling</category>
            <category>data-engineering-bootcamp</category>
            <category>cumulative-table</category>
        </item>
        <item>
            <title><![CDATA[Welcome]]></title>
            <link>https://buildwithvibs.in/blog/welcome-to-my-blog</link>
            <guid>https://buildwithvibs.in/blog/welcome-to-my-blog</guid>
            <pubDate>Tue, 26 Nov 2024 00:00:00 GMT</pubDate>
            <description><![CDATA[Welcome dear readers...]]></description>
            <content:encoded><![CDATA[<p>Welcome dear readers...</p>
<p>Im Vibhavari Bellutagi, from India, currently staying in France. I'm a Data Engineer and I got sometime to channelise my thoughts and experiences in the form of blog. I'm a big fan of <code>Learn by Doing</code>, so you will see most of the posts are practical oriented.</p>
<p>I always wanted to have a blog to share my thoughts and experiences with the data engineering world. Im beginner in the world of blogging, so Im still learning how to write a good and effective content. I hope you enjoy my blog and find it useful.</p>
<p>I have three different sections in my website:</p>
<ol>
<li><a href="https://buildwithvibs.in/blog/welcome-to-my-blog">Blogs</a>: Where I would long format technical blogs that I have experienced or learned recently.</li>
<li><a href="https://buildwithvibs.in/TechBytes/intro">Tech Bytes</a>: Where I would post small technical tips and tricks that I have learned.</li>
</ol>
<p>Hope I will be able to keep up with the content and make it useful for you, im striving to make it better everyday.</p>
<p>Thanks for visiting my blog. Hope you enjoy it. Feel free to reach out to me on
</p><div class="social-container"><a href="https://github.com/vibhabellutagi19" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon github"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 496 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z"></path></svg></span></a><a href="https://x.com/buildwith_vibs" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon twitter"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 512 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M459.37 151.716c.325 4.548.325 9.097.325 13.645 0 138.72-105.583 298.558-298.558 298.558-59.452 0-114.68-17.219-161.137-47.106 8.447.974 16.568 1.299 25.34 1.299 49.055 0 94.213-16.568 130.274-44.832-46.132-.975-84.792-31.188-98.112-72.772 6.498.974 12.995 1.624 19.818 1.624 9.421 0 18.843-1.3 27.614-3.573-48.081-9.747-84.143-51.98-84.143-102.985v-1.299c13.969 7.797 30.214 12.67 47.431 13.319-28.264-18.843-46.781-51.005-46.781-87.391 0-19.492 5.197-37.36 14.294-52.954 51.655 63.675 129.3 105.258 216.365 109.807-1.624-7.797-2.599-15.918-2.599-24.04 0-57.828 46.782-104.934 104.934-104.934 30.213 0 57.502 12.67 76.67 33.137 23.715-4.548 46.456-13.32 66.599-25.34-7.798 24.366-24.366 44.833-46.132 57.827 21.117-2.273 41.584-8.122 60.426-16.243-14.292 20.791-32.161 39.308-52.628 54.253z"></path></svg></span></a><a href="https://www.linkedin.com/in/vibhavari-bellutagi-837871189/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon linkedin"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M416 32H31.9C14.3 32 0 46.5 0 64.3v383.4C0 465.5 14.3 480 31.9 480H416c17.6 0 32-14.5 32-32.3V64.3c0-17.8-14.4-32.3-32-32.3zM135.4 416H69V202.2h66.5V416zm-33.2-243c-21.3 0-38.5-17.3-38.5-38.5S80.9 96 102.2 96c21.2 0 38.5 17.3 38.5 38.5 0 21.3-17.2 38.5-38.5 38.5zm282.1 243h-66.4V312c0-24.8-.5-56.7-34.5-56.7-34.6 0-39.9 27-39.9 54.9V416h-66.4V202.2h63.7v29.2h.9c8.9-16.8 30.6-34.5 62.9-34.5 67.2 0 79.7 44.3 79.7 101.9V416z"></path></svg></span></a><a href="https://www.instagram.com/buildwith_vibs/" target="_blank" rel="noopener noreferrer" class="social-link"><span class="social-icon instagram"><svg stroke="currentColor" fill="currentColor" stroke-width="0" viewBox="0 0 448 512" height="1em" width="1em" xmlns="http://www.w3.org/2000/svg"><path d="M224.1 141c-63.6 0-114.9 51.3-114.9 114.9s51.3 114.9 114.9 114.9S339 319.5 339 255.9 287.7 141 224.1 141zm0 189.6c-41.1 0-74.7-33.5-74.7-74.7s33.5-74.7 74.7-74.7 74.7 33.5 74.7 74.7-33.6 74.7-74.7 74.7zm146.4-194.3c0 14.9-12 26.8-26.8 26.8-14.9 0-26.8-12-26.8-26.8s12-26.8 26.8-26.8 26.8 12 26.8 26.8zm76.1 27.2c-1.7-35.9-9.9-67.7-36.2-93.9-26.2-26.2-58-34.4-93.9-36.2-37-2.1-147.9-2.1-184.9 0-35.8 1.7-67.6 9.9-93.9 36.1s-34.4 58-36.2 93.9c-2.1 37-2.1 147.9 0 184.9 1.7 35.9 9.9 67.7 36.2 93.9s58 34.4 93.9 36.2c37 2.1 147.9 2.1 184.9 0 35.9-1.7 67.7-9.9 93.9-36.2 26.2-26.2 34.4-58 36.2-93.9 2.1-37 2.1-147.8 0-184.8zM398.8 388c-7.8 19.6-22.9 34.7-42.6 42.6-29.5 11.7-99.5 9-132.1 9s-102.7 2.6-132.1-9c-19.6-7.8-34.7-22.9-42.6-42.6-11.7-29.5-9-99.5-9-132.1s-2.6-102.7 9-132.1c7.8-19.6 22.9-34.7 42.6-42.6 29.5-11.7 99.5-9 132.1-9s102.7-2.6 132.1 9c19.6 7.8 34.7 22.9 42.6 42.6 11.7 29.5 9 99.5 9 132.1s2.7 102.7-9 132.1z"></path></svg></span></a></div>.<p></p>
<p>Cheers,
Vibhavari</p>]]></content:encoded>
            <category>Welcome post</category>
        </item>
    </channel>
</rss>